{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Purchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Sale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC20.sol",
    "1": "contracts/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        441
      ],
      "IERC20": [
        531
      ]
    },
    "id": 442,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 532,
        "src": "57:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IERC20",
              "nameLocations": [
                "99:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 531,
              "src": "99:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "99:6:0"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441,
          531
        ],
        "name": "ERC20",
        "nameLocation": "90:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "128:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "112:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "112:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "155:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "140:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "140:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "181:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "166:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "166:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "210:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "194:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "265:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "228:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "237:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "228:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "248:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "338:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "280:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 21,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "289:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "280:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 20,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "300:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "320:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "436:115:0",
              "statements": [
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "446:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "454:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "446:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "446:13:0"
                },
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "469:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "479:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "469:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "469:17:0"
                },
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "496:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 40,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "505:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "509:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "505:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "496:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "496:19:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "530:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "525:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "525:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "525:19:0"
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "383:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "369:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "404:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "390:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "421:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "413:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "368:67:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:0"
            },
            "scope": 441,
            "src": "356:195:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "584:150:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "602:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "606:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "602:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "614:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "602:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682066756e647321",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "617:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d554845338db0190178b05eedccb58787f6ec0ebed540df185602e94e42610e2",
                          "typeString": "literal_string \"not enough funds!\""
                        },
                        "value": "not enough funds!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d554845338db0190178b05eedccb58787f6ec0ebed540df185602e94e42610e2",
                          "typeString": "literal_string \"not enough funds!\""
                        }
                      ],
                      "id": 52,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "594:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "594:43:0"
                },
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "647:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 63,
                      "indexExpression": {
                        "expression": {
                          "id": 61,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "657:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "661:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "657:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "647:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 64,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "672:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "676:5:0",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "672:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "647:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "647:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "705:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "709:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "705:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "717:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "721:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "717:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68,
                      "name": "Purchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "696:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "696:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "EmitStatement",
                  "src": "691:36:0"
                }
              ]
            },
            "id": 76,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:0"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:0"
            },
            "scope": 441,
            "src": "557:177:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "812:133:0",
              "statements": [
                {
                  "expression": {
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 86,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "822:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "832:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "836:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "832:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "822:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 90,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "847:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "822:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "822:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "892:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 95,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "871:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "875:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "871:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "863:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 93,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "863:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "863:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "883:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "863:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "863:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "863:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "919:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "923:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "919:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "931:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102,
                      "name": "Sale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "914:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "914:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "EmitStatement",
                  "src": "909:29:0"
                }
              ]
            },
            "functionSelector": "e4849b32",
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 81,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "792:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "796:6:0",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "792:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 83,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78,
                    "src": "804:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 84,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80,
                  "name": "enoughTokens",
                  "nameLocations": [
                    "779:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "779:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "779:32:0"
              }
            ],
            "name": "sell",
            "nameLocation": "749:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "762:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "754:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:16:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "812:0:0"
            },
            "scope": 441,
            "src": "740:205:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1003:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 117,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1031:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 116,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "1021:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1021:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 119,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1040:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1021:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820746f6b656e7321",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1048:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df59bca08654599223eb81a79cbf0b926b9aafc4af0e1a864ce026645244aee",
                          "typeString": "literal_string \"not enough tokens!\""
                        },
                        "value": "not enough tokens!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df59bca08654599223eb81a79cbf0b926b9aafc4af0e1a864ce026645244aee",
                          "typeString": "literal_string \"not enough tokens!\""
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1013:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 125,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1087:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1096:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1087:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206973207a65726f21",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1099:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d486b4b6633ba959c44790ff1bb154a0f57d45a0d437e7f168f19df068adca7b",
                          "typeString": "literal_string \"amount is zero!\""
                        },
                        "value": "amount is zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d486b4b6633ba959c44790ff1bb154a0f57d45a0d437e7f168f19df068adca7b",
                          "typeString": "literal_string \"amount is zero!\""
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1079:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1079:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:38:0"
                },
                {
                  "id": 131,
                  "nodeType": "PlaceholderStatement",
                  "src": "1127:1:0"
                }
              ]
            },
            "id": 133,
            "name": "enoughTokens",
            "nameLocation": "960:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "981:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "973:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "995:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "987:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "972:30:0"
            },
            "src": "951:184:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1162:74:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 136,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1180:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1184:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1180:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 138,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1194:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1180:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420616e206f776e657221",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1202:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15f6045e5864a5a6a9235deb0f530f5a98002e9ce1484dcdc1f92982a1f15fc8",
                          "typeString": "literal_string \"not an owner!\""
                        },
                        "value": "not an owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15f6045e5864a5a6a9235deb0f530f5a98002e9ce1484dcdc1f92982a1f15fc8",
                          "typeString": "literal_string \"not an owner!\""
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1172:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:46:0"
                },
                {
                  "id": 143,
                  "nodeType": "PlaceholderStatement",
                  "src": "1228:1:0"
                }
              ]
            },
            "id": 145,
            "name": "onlyOwner",
            "nameLocation": "1150:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:2:0"
            },
            "src": "1141:95:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              448
            ],
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "1294:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 150,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "1311:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 149,
                  "id": 151,
                  "nodeType": "Return",
                  "src": "1304:12:0"
                }
              ]
            },
            "functionSelector": "06fdde03",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1251:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:0"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1279:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:15:0"
            },
            "scope": 441,
            "src": "1242:81:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              453
            ],
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1383:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 158,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "1400:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 159,
                  "nodeType": "Return",
                  "src": "1393:14:0"
                }
              ]
            },
            "functionSelector": "95d89b41",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1338:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1344:2:0"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1368:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1367:15:0"
            },
            "scope": 441,
            "src": "1329:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              458
            ],
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1472:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1489:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 165,
                  "id": 167,
                  "nodeType": "Return",
                  "src": "1482:9:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1433:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1441:2:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1465:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1464:7:0"
            },
            "scope": 441,
            "src": "1424:74:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              463
            ],
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1557:36:0",
              "statements": [
                {
                  "expression": {
                    "id": 174,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "1574:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 173,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "1567:19:0"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1513:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:2:0"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1548:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:9:0"
            },
            "scope": 441,
            "src": "1504:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              470
            ],
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1665:42:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 184,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1682:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 186,
                    "indexExpression": {
                      "id": 185,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "1692:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1682:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "1675:25:0"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1608:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1626:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1618:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1617:17:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1656:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1656:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1655:9:0"
            },
            "scope": 441,
            "src": "1599:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              477
            ],
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "1799:182:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 202,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1830:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1834:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1830:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 204,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1842:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 205,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "1846:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 201,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "1809:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:44:0"
                },
                {
                  "expression": {
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 208,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1863:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 211,
                      "indexExpression": {
                        "expression": {
                          "id": 209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1873:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1877:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1873:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1863:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 212,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "1888:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1863:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:31:0"
                },
                {
                  "expression": {
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 215,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1904:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 217,
                      "indexExpression": {
                        "id": 216,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1914:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1904:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 218,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "1921:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1904:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "1904:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 222,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1951:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1955:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1951:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 224,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1963:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 225,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "1967:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 221,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "1942:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1942:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "EmitStatement",
                  "src": "1937:37:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 196,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1779:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1783:6:0",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1779:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 198,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 193,
                    "src": "1791:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 195,
                  "name": "enoughTokens",
                  "nameLocations": [
                    "1766:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "1766:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1766:32:0"
              }
            ],
            "name": "transfer",
            "nameLocation": "1722:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1739:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1731:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1751:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1743:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:28:0"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1799:0:0"
            },
            "scope": 441,
            "src": "1713:268:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              486
            ],
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "2068:51:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 238,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2085:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 240,
                      "indexExpression": {
                        "id": 239,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "2097:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2085:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 242,
                    "indexExpression": {
                      "id": 241,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "2104:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2085:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 237,
                  "id": 243,
                  "nodeType": "Return",
                  "src": "2078:34:0"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1996:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2014:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2006:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2029:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2021:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2005:32:0"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2059:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2059:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2058:9:0"
            },
            "scope": 441,
            "src": "1987:132:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              493
            ],
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "2182:54:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 253,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2201:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2205:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2201:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 255,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "2213:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 256,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "2222:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 252,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "2192:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:37:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2134:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2150:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2142:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2167:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2159:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2141:33:0"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2182:0:0"
            },
            "scope": 441,
            "src": "2125:111:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "2326:101:0",
              "statements": [
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 269,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2336:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 272,
                        "indexExpression": {
                          "id": 270,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "2348:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2336:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "id": 271,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "2356:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2336:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "2367:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2336:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 278,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "2396:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 279,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "2404:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 280,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "2413:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 277,
                      "name": "Approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "2388:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "EmitStatement",
                  "src": "2383:37:0"
                }
              ]
            },
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "2251:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2268:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2260:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2284:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2276:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2301:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "2293:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2259:49:0"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:0:0"
            },
            "scope": 441,
            "src": "2242:185:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              502
            ],
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "2542:320:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 298,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "2573:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 299,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "2581:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 300,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "2592:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 297,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "2552:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 304,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "2617:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 306,
                            "indexExpression": {
                              "id": 305,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "2629:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2617:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "expression": {
                              "id": 307,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2637:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2641:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2637:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2617:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 310,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "2652:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2617:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20616c6c6f77616e636521",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2660:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_105f17d18441511e313a120538aeba623f4472b38a36ddd66c46b2dde6432141",
                          "typeString": "literal_string \"no allowance!\""
                        },
                        "value": "no allowance!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_105f17d18441511e313a120538aeba623f4472b38a36ddd66c46b2dde6432141",
                          "typeString": "literal_string \"no allowance!\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2609:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:67:0"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 315,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2686:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 319,
                        "indexExpression": {
                          "id": 316,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "2698:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2686:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 320,
                      "indexExpression": {
                        "expression": {
                          "id": 317,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2706:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2710:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2706:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2686:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 321,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2721:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2686:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:41:0"
                },
                {
                  "expression": {
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 324,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2738:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 326,
                      "indexExpression": {
                        "id": 325,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "2748:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2738:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 327,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2759:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2738:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:27:0"
                },
                {
                  "expression": {
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 330,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2775:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 332,
                      "indexExpression": {
                        "id": 331,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "2785:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2775:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 333,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2799:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2775:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "2775:30:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 337,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "2829:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 338,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "2837:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 339,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "2848:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 336,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "2820:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "EmitStatement",
                  "src": "2815:40:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 293,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 286,
                    "src": "2526:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 294,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 290,
                    "src": "2534:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 295,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 292,
                  "name": "enoughTokens",
                  "nameLocations": [
                    "2513:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "2513:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2513:28:0"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "2442:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2463:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2455:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2455:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2479:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2471:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2498:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2490:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2490:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2454:51:0"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2542:0:0"
            },
            "scope": 441,
            "src": "2433:429:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "2915:206:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2954:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2946:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 351,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2946:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2946:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 357,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2966:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$441",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$441",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2958:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 355,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2958:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2958:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 359,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "2973:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 350,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "2925:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2925:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "2925:55:0"
                },
                {
                  "expression": {
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 362,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2990:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 367,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 365,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3008:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$441",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$441",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3000:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 363,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3000:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3000:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2990:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 368,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "3018:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2990:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:34:0"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 371,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3034:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 372,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "3050:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3034:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3088:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3080:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3080:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3080:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 382,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3100:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$441",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$441",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3092:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 380,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3092:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3092:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 384,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3107:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 375,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "3071:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3071:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "EmitStatement",
                  "src": "3066:48:0"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 388,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 348,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 347,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2905:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 145,
                  "src": "2905:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2905:9:0"
              }
            ],
            "name": "mint",
            "nameLocation": "2877:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2890:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "2882:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2882:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2881:16:0"
            },
            "returnParameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2915:0:0"
            },
            "scope": 441,
            "src": "2868:253:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "3215:193:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 402,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "3233:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 403,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 392,
                            "src": "3248:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3233:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3257:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3233:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74206265207a65726f21",
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3260:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcbf14d21ff84c20110aa11d51b1b49ead4d8a823245d8c2c5adf27b4d98b8be",
                          "typeString": "literal_string \"cannot be zero!\""
                        },
                        "value": "cannot be zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcbf14d21ff84c20110aa11d51b1b49ead4d8a823245d8c2c5adf27b4d98b8be",
                          "typeString": "literal_string \"cannot be zero!\""
                        }
                      ],
                      "id": 401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3225:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3225:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "3225:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 411,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "3309:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3323:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3315:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3315:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3315:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 416,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "3327:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 410,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "3288:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3288:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "3288:46:0"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 419,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3344:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 421,
                      "indexExpression": {
                        "id": 420,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "3354:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3344:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 422,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "3363:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3344:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "3344:25:0"
                },
                {
                  "expression": {
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 425,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3379:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 426,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "3395:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3379:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:22:0"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 394,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3178:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 145,
                  "src": "3178:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3178:9:0"
              },
              {
                "arguments": [
                  {
                    "id": 397,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 390,
                    "src": "3201:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 398,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 392,
                    "src": "3207:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 399,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 396,
                  "name": "enoughTokens",
                  "nameLocations": [
                    "3188:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "3188:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3188:26:0"
              }
            ],
            "name": "burn",
            "nameLocation": "3136:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3149:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "3141:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3141:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3163:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "3155:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3140:30:0"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:0:0"
            },
            "scope": 441,
            "src": "3127:281:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "3503:2:0",
              "statements": []
            },
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3423:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3452:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3444:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3466:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3458:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3478:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3470:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3443:42:0"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3503:0:0"
            },
            "scope": 441,
            "src": "3414:91:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 442,
        "src": "81:3426:0",
        "usedErrors": [],
        "usedEvents": [
          510,
          518,
          524,
          530
        ]
      }
    ],
    "src": "32:3476:0"
  },
  "bytecode": "",
  "bytecodeSha1": "6c36caf2991baff458ac585fd05c53a0f97f4ff6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20.<receive>": {
          "29": [
            602,
            615,
            true
          ]
        },
        "ERC20.burn": {
          "31": [
            3233,
            3258,
            true
          ]
        },
        "ERC20.transferFrom": {
          "30": [
            2617,
            2658,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "ERC20.<receive>": {
          "0": [
            594,
            637
          ],
          "1": [
            647,
            681
          ],
          "2": [
            691,
            727
          ]
        },
        "ERC20._approve": {
          "27": [
            2336,
            2373
          ],
          "28": [
            2383,
            2420
          ]
        },
        "ERC20.allowance": {
          "23": [
            2078,
            2112
          ]
        },
        "ERC20.approve": {
          "7": [
            2192,
            2229
          ]
        },
        "ERC20.balanceOf": {
          "5": [
            1675,
            1700
          ]
        },
        "ERC20.burn": {
          "14": [
            3225,
            3278
          ],
          "15": [
            3344,
            3369
          ],
          "16": [
            3379,
            3401
          ]
        },
        "ERC20.decimals": {
          "4": [
            1482,
            1491
          ]
        },
        "ERC20.mint": {
          "17": [
            2990,
            3024
          ],
          "18": [
            3034,
            3056
          ],
          "19": [
            3066,
            3114
          ]
        },
        "ERC20.name": {
          "6": [
            1304,
            1316
          ]
        },
        "ERC20.sell": {
          "24": [
            822,
            853
          ],
          "25": [
            863,
            899
          ],
          "26": [
            909,
            938
          ]
        },
        "ERC20.symbol": {
          "13": [
            1393,
            1407
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            1567,
            1586
          ]
        },
        "ERC20.transfer": {
          "20": [
            1863,
            1894
          ],
          "21": [
            1904,
            1927
          ],
          "22": [
            1937,
            1974
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            2609,
            2676
          ],
          "9": [
            2686,
            2727
          ],
          "10": [
            2738,
            2765
          ],
          "11": [
            2775,
            2805
          ],
          "12": [
            2815,
            2855
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "6080604052600436106100ab5760003560e01c806395d89b411161006457806395d89b41146102375780639dc29fac1461024c578063a0712d681461026c578063a9059cbb1461028c578063dd62ed3e146102ac578063e4849b32146102cc57600080fd5b806306fdde0314610159578063095ea7b31461018457806318160ddd146101a657806323b872dd146101c5578063313ce567146101e557806370a082311461020157600080fd5b3661015457600034116100f95760405162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f7567682066756e64732160781b60448201526064015b60405180910390fd5b33600090815260046020526040812080543492906101189084906109b7565b909155505060405134815233907f2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f6329060200160405180910390a2005b600080fd5b34801561016557600080fd5b5061016e6102ec565b60405161017b91906109ca565b60405180910390f35b34801561019057600080fd5b506101a461019f366004610a34565b61037e565b005b3480156101b257600080fd5b506003545b60405190815260200161017b565b3480156101d157600080fd5b506101a46101e0366004610a5e565b61038d565b3480156101f157600080fd5b506040516012815260200161017b565b34801561020d57600080fd5b506101b761021c366004610a9a565b6001600160a01b031660009081526004602052604090205490565b34801561024357600080fd5b5061016e610538565b34801561025857600080fd5b506101a4610267366004610a34565b610547565b34801561027857600080fd5b506101a4610287366004610abc565b61068c565b34801561029857600080fd5b506101a46102a7366004610a34565b61074e565b3480156102b857600080fd5b506101b76102c7366004610ad5565b610836565b3480156102d857600080fd5b506101a46102e7366004610abc565b610863565b6060600180546102fb90610b08565b80601f016020809104026020016040519081016040528092919081815260200182805461032790610b08565b80156103745780601f1061034957610100808354040283529160200191610374565b820191906000526020600020905b81548152906001019060200180831161035757829003601f168201915b5050505050905090565b610389338383610940565b5050565b8281806103af836001600160a01b031660009081526004602052604090205490565b10156103cd5760405162461bcd60e51b81526004016100f090610b42565b600081116103ed5760405162461bcd60e51b81526004016100f090610b6e565b6001600160a01b03851660009081526005602090815260408083203384529091529020548311156104505760405162461bcd60e51b815260206004820152600d60248201526c6e6f20616c6c6f77616e63652160981b60448201526064016100f0565b6001600160a01b038516600090815260056020908152604080832033845290915281208054859290610483908490610b97565b90915550506001600160a01b038516600090815260046020526040812080548592906104b0908490610b97565b90915550506001600160a01b038416600090815260046020526040812080548592906104dd9084906109b7565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161052991815260200190565b60405180910390a35050505050565b6060600280546102fb90610b08565b6000546001600160a01b031633146105915760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b60448201526064016100f0565b8181806105b3836001600160a01b031660009081526004602052604090205490565b10156105d15760405162461bcd60e51b81526004016100f090610b42565b600081116105f15760405162461bcd60e51b81526004016100f090610b6e565b6000836003546106019190610b97565b116106405760405162461bcd60e51b815260206004820152600f60248201526e63616e6e6f74206265207a65726f2160881b60448201526064016100f0565b6001600160a01b03841660009081526004602052604081208054859290610668908490610b97565b9250508190555082600360008282546106819190610b97565b909155505050505050565b6000546001600160a01b031633146106d65760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b60448201526064016100f0565b30600090815260046020526040812080548392906106f59084906109b7565b92505081905550806003600082825461070e91906109b7565b909155505060405181815230906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b33600081815260046020526040902054829081111561077f5760405162461bcd60e51b81526004016100f090610b42565b6000811161079f5760405162461bcd60e51b81526004016100f090610b6e565b33600090815260046020526040812080548592906107be908490610b97565b90915550506001600160a01b038416600090815260046020526040812080548592906107eb9084906109b7565b90915550506040518381526001600160a01b0385169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b6001600160a01b038083166000908152600560209081526040808320938516835292905220545b92915050565b3360008181526004602052604090205482908111156108945760405162461bcd60e51b81526004016100f090610b42565b600081116108b45760405162461bcd60e51b81526004016100f090610b6e565b33600090815260046020526040812080548592906108d3908490610b97565b9091555050604051339084156108fc029085906000818181858888f19350505050158015610905573d6000803e3d6000fd5b5060405183815233907fc6851889326b4ff916523ef06f539b4cf0b81d78fc6e0f97c30e6223d18319909060200160405180910390a2505050565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f6e11fb1b7f119e3f2fa29896ef5fdf8b8a2d0d4df6fe90ba8668e7d8b2ffa25e910160405180910390a3505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561085d5761085d6109a1565b600060208083528351808285015260005b818110156109f7578581018301518582016040015282016109db565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a2f57600080fd5b919050565b60008060408385031215610a4757600080fd5b610a5083610a18565b946020939093013593505050565b600080600060608486031215610a7357600080fd5b610a7c84610a18565b9250610a8a60208501610a18565b9150604084013590509250925092565b600060208284031215610aac57600080fd5b610ab582610a18565b9392505050565b600060208284031215610ace57600080fd5b5035919050565b60008060408385031215610ae857600080fd5b610af183610a18565b9150610aff60208401610a18565b90509250929050565b600181811c90821680610b1c57607f821691505b602082108103610b3c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601290820152716e6f7420656e6f75676820746f6b656e732160701b604082015260600190565b6020808252600f908201526e616d6f756e74206973207a65726f2160881b604082015260600190565b8181038181111561085d5761085d6109a156fea2646970667358221220150ae70d6a4a6bd3e138a3af4681f559afe36a9d810b025813777229e108d64764736f6c63430008150033",
  "deployedSourceMap": "81:3426:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:1;602:9;:13;594:43;;;;-1:-1:-1;;;594:43:0;;216:2:2;594:43:0;;;198:21:2;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:2;;;267:47;331:18;;594:43:0;;;;;;;;;657:10;647:21;;;;:9;:21;;;;;:34;;672:9;;647:21;:34;;672:9;;647:34;:::i;:::-;;;;-1:-1:-1;;696:31:0;;717:9;768:25:2;;705:10:0;;696:31;;756:2:2;741:18;696:31:0;;;;;;;81:3426;;;;;1242:81;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2125:111;;;;;;;;;;-1:-1:-1;2125:111:0;;;;;:::i;:::-;;:::i;:::-;;1504:89;;;;;;;;;;-1:-1:-1;1574:12:0;;1504:89;;;768:25:2;;;756:2;741:18;1504:89:0;622:177:2;2433:429:0;;;;;;;;;;-1:-1:-1;2433:429:0;;;;;:::i;:::-;;:::i;1424:74::-;;;;;;;;;;-1:-1:-1;1424:74:0;;1489:2;2269:36:2;;2257:2;2242:18;1424:74:0;2127:184:2;1599:108:0;;;;;;;;;;-1:-1:-1;1599:108:0;;;;;:::i;:::-;-1:-1:-1;;;;;1682:18:0;1656:7;1682:18;;;:9;:18;;;;;;;1599:108;1329:85;;;;;;;;;;;;;:::i;3127:281::-;;;;;;;;;;-1:-1:-1;3127:281:0;;;;;:::i;:::-;;:::i;2868:253::-;;;;;;;;;;-1:-1:-1;2868:253:0;;;;;:::i;:::-;;:::i;1713:268::-;;;;;;;;;;-1:-1:-1;1713:268:0;;;;;:::i;:::-;;:::i;1987:132::-;;;;;;;;;;-1:-1:-1;1987:132:0;;;;;:::i;:::-;;:::i;740:205::-;;;;;;;;;;-1:-1:-1;740:205:0;;;;;:::i;:::-;;:::i;1242:81::-;1279:13;1311:5;1304:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1242:81;:::o;2125:111::-;2192:37;2201:10;2213:7;2222:6;2192:8;:37::i;:::-;2125:111;;:::o;2433:429::-;2526:6;2534;1040;1021:15;1031:4;-1:-1:-1;;;;;1682:18:0;1656:7;1682:18;;;:9;:18;;;;;;;1599:108;1021:15;:25;;1013:56;;;;-1:-1:-1;;;1013:56:0;;;;;;;:::i;:::-;1096:1;1087:6;:10;1079:38;;;;-1:-1:-1;;;1079:38:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2617:19:0;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;2637:10:::1;2617:31:::0;;;;;;;;:41;-1:-1:-1;2617:41:0::1;2609:67;;;::::0;-1:-1:-1;;;2609:67:0;;4235:2:2;2609:67:0::1;::::0;::::1;4217:21:2::0;4274:2;4254:18;;;4247:30;-1:-1:-1;;;4293:18:2;;;4286:43;4346:18;;2609:67:0::1;4033:337:2::0;2609:67:0::1;-1:-1:-1::0;;;;;2686:19:0;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;2706:10:::1;2686:31:::0;;;;;;;:41;;2721:6;;2686:19;:41:::1;::::0;2721:6;;2686:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;2738:17:0;::::1;;::::0;;;:9:::1;:17;::::0;;;;:27;;2759:6;;2738:17;:27:::1;::::0;2759:6;;2738:27:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;2775:20:0;::::1;;::::0;;;:9:::1;:20;::::0;;;;:30;;2799:6;;2775:20;:30:::1;::::0;2799:6;;2775:30:::1;:::i;:::-;;;;;;;;2837:9;-1:-1:-1::0;;;;;2820:35:0::1;2829:6;-1:-1:-1::0;;;;;2820:35:0::1;;2848:6;2820:35;;;;768:25:2::0;;756:2;741:18;;622:177;2820:35:0::1;;;;;;;;2433:429:::0;;;;;:::o;1329:85::-;1368:13;1400:7;1393:14;;;;;:::i;3127:281::-;1194:6;;-1:-1:-1;;;;;1194:6:0;1180:10;:20;1172:46;;;;-1:-1:-1;;;1172:46:0;;4710:2:2;1172:46:0;;;4692:21:2;4749:2;4729:18;;;4722:30;-1:-1:-1;;;4768:18:2;;;4761:43;4821:18;;1172:46:0;4508:337:2;1172:46:0;3201:4:::1;3207:6;1040;1021:15;1031:4;-1:-1:-1::0;;;;;1682:18:0;1656:7;1682:18;;;:9;:18;;;;;;;1599:108;1021:15:::1;:25;;1013:56;;;;-1:-1:-1::0;;;1013:56:0::1;;;;;;;:::i;:::-;1096:1;1087:6;:10;1079:38;;;;-1:-1:-1::0;;;1079:38:0::1;;;;;;;:::i;:::-;3257:1:::2;3248:6;3233:12;;:21;;;;:::i;:::-;:25;3225:53;;;::::0;-1:-1:-1;;;3225:53:0;;5052:2:2;3225:53:0::2;::::0;::::2;5034:21:2::0;5091:2;5071:18;;;5064:30;-1:-1:-1;;;5110:18:2;;;5103:45;5165:18;;3225:53:0::2;4850:339:2::0;3225:53:0::2;-1:-1:-1::0;;;;;3344:15:0;::::2;;::::0;;;:9:::2;:15;::::0;;;;:25;;3363:6;;3344:15;:25:::2;::::0;3363:6;;3344:25:::2;:::i;:::-;;;;;;;;3395:6;3379:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;3127:281:0:o;2868:253::-;1194:6;;-1:-1:-1;;;;;1194:6:0;1180:10;:20;1172:46;;;;-1:-1:-1;;;1172:46:0;;4710:2:2;1172:46:0;;;4692:21:2;4749:2;4729:18;;;4722:30;-1:-1:-1;;;4768:18:2;;;4761:43;4821:18;;1172:46:0;4508:337:2;1172:46:0;3008:4:::1;2990:24;::::0;;;:9:::1;:24;::::0;;;;:34;;3018:6;;2990:24;:34:::1;::::0;3018:6;;2990:34:::1;:::i;:::-;;;;;;;;3050:6;3034:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3071:43:0::1;::::0;768:25:2;;;3100:4:0::1;::::0;3088:1:::1;::::0;3071:43:::1;::::0;756:2:2;741:18;3071:43:0::1;;;;;;;2868:253:::0;:::o;1713:268::-;1779:10;1656:7;1682:18;;;:9;:18;;;;;;1791:6;;;-1:-1:-1;1021:25:0;1013:56;;;;-1:-1:-1;;;1013:56:0;;;;;;;:::i;:::-;1096:1;1087:6;:10;1079:38;;;;-1:-1:-1;;;1079:38:0;;;;;;;:::i;:::-;1873:10:::1;1863:21;::::0;;;:9:::1;:21;::::0;;;;:31;;1888:6;;1863:21;:31:::1;::::0;1888:6;;1863:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;1904:13:0;::::1;;::::0;;;:9:::1;:13;::::0;;;;:23;;1921:6;;1904:13;:23:::1;::::0;1921:6;;1904:23:::1;:::i;:::-;::::0;;;-1:-1:-1;;1942:32:0::1;::::0;768:25:2;;;-1:-1:-1;;;;;1942:32:0;::::1;::::0;1951:10:::1;::::0;1942:32:::1;::::0;756:2:2;741:18;1942:32:0::1;;;;;;;1713:268:::0;;;;:::o;1987:132::-;-1:-1:-1;;;;;2085:18:0;;;2059:7;2085:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;1987:132;;;;;:::o;740:205::-;792:10;1656:7;1682:18;;;:9;:18;;;;;;804:6;;;-1:-1:-1;1021:25:0;1013:56;;;;-1:-1:-1;;;1013:56:0;;;;;;;:::i;:::-;1096:1;1087:6;:10;1079:38;;;;-1:-1:-1;;;1079:38:0;;;;;;;:::i;:::-;832:10:::1;822:21;::::0;;;:9:::1;:21;::::0;;;;:31;;847:6;;822:21;:31:::1;::::0;847:6;;822:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;863:36:0::1;::::0;871:10:::1;::::0;863:36;::::1;;;::::0;892:6;;863:36:::1;::::0;;;892:6;871:10;863:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;914:24:0::1;::::0;768:25:2;;;919:10:0::1;::::0;914:24:::1;::::0;756:2:2;741:18;914:24:0::1;;;;;;;740:205:::0;;;:::o;2242:185::-;-1:-1:-1;;;;;2336:19:0;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:37;;;2388:32;;768:25:2;;;2388:32:0;;741:18:2;2388:32:0;;;;;;;2242:185;;;:::o;360:127:2:-;421:10;416:3;412:20;409:1;402:31;452:4;449:1;442:15;476:4;473:1;466:15;492:125;557:9;;;578:10;;;575:36;;;591:18;;:::i;804:548::-;916:4;945:2;974;963:9;956:21;1006:6;1000:13;1049:6;1044:2;1033:9;1029:18;1022:34;1074:1;1084:140;1098:6;1095:1;1092:13;1084:140;;;1193:14;;;1189:23;;1183:30;1159:17;;;1178:2;1155:26;1148:66;1113:10;;1084:140;;;1088:3;1273:1;1268:2;1259:6;1248:9;1244:22;1240:31;1233:42;1343:2;1336;1332:7;1327:2;1319:6;1315:15;1311:29;1300:9;1296:45;1292:54;1284:62;;;;804:548;;;;:::o;1357:173::-;1425:20;;-1:-1:-1;;;;;1474:31:2;;1464:42;;1454:70;;1520:1;1517;1510:12;1454:70;1357:173;;;:::o;1535:254::-;1603:6;1611;1664:2;1652:9;1643:7;1639:23;1635:32;1632:52;;;1680:1;1677;1670:12;1632:52;1703:29;1722:9;1703:29;:::i;:::-;1693:39;1779:2;1764:18;;;;1751:32;;-1:-1:-1;;;1535:254:2:o;1794:328::-;1871:6;1879;1887;1940:2;1928:9;1919:7;1915:23;1911:32;1908:52;;;1956:1;1953;1946:12;1908:52;1979:29;1998:9;1979:29;:::i;:::-;1969:39;;2027:38;2061:2;2050:9;2046:18;2027:38;:::i;:::-;2017:48;;2112:2;2101:9;2097:18;2084:32;2074:42;;1794:328;;;;;:::o;2316:186::-;2375:6;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;2316:186;-1:-1:-1;;;2316:186:2:o;2507:180::-;2566:6;2619:2;2607:9;2598:7;2594:23;2590:32;2587:52;;;2635:1;2632;2625:12;2587:52;-1:-1:-1;2658:23:2;;2507:180;-1:-1:-1;2507:180:2:o;2692:260::-;2760:6;2768;2821:2;2809:9;2800:7;2796:23;2792:32;2789:52;;;2837:1;2834;2827:12;2789:52;2860:29;2879:9;2860:29;:::i;:::-;2850:39;;2908:38;2942:2;2931:9;2927:18;2908:38;:::i;:::-;2898:48;;2692:260;;;;;:::o;2957:380::-;3036:1;3032:12;;;;3079;;;3100:61;;3154:4;3146:6;3142:17;3132:27;;3100:61;3207:2;3199:6;3196:14;3176:18;3173:38;3170:161;;3253:10;3248:3;3244:20;3241:1;3234:31;3288:4;3285:1;3278:15;3316:4;3313:1;3306:15;3170:161;;2957:380;;;:::o;3342:342::-;3544:2;3526:21;;;3583:2;3563:18;;;3556:30;-1:-1:-1;;;3617:2:2;3602:18;;3595:48;3675:2;3660:18;;3342:342::o;3689:339::-;3891:2;3873:21;;;3930:2;3910:18;;;3903:30;-1:-1:-1;;;3964:2:2;3949:18;;3942:45;4019:2;4004:18;;3689:339::o;4375:128::-;4442:9;;;4463:11;;;4460:37;;;4477:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    81,
    3507
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x154 JUMPI PUSH1 0x0 CALLVALUE GT PUSH2 0xF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x6E6F7420656E6F7567682066756E647321 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x118 SWAP1 DUP5 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x2499A5330AB0979CC612135E7883EBC3CD5C9F7A8508F042540C34723348F632 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x37E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x538 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2FB SWAP1 PUSH2 0xB08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x327 SWAP1 PUSH2 0xB08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x374 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x349 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x374 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x357 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x389 CALLER DUP4 DUP4 PUSH2 0x940 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP2 DUP1 PUSH2 0x3AF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6E6F20616C6C6F77616E636521 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x483 SWAP1 DUP5 SWAP1 PUSH2 0xB97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x4B0 SWAP1 DUP5 SWAP1 PUSH2 0xB97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x4DD SWAP1 DUP5 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2FB SWAP1 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6E6F7420616E206F776E657221 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF0 JUMP JUMPDEST DUP2 DUP2 DUP1 PUSH2 0x5B3 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x3 SLOAD PUSH2 0x601 SWAP2 SWAP1 PUSH2 0xB97 JUMP JUMPDEST GT PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x63616E6E6F74206265207A65726F21 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x668 SWAP1 DUP5 SWAP1 PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0xB97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6E6F7420616E206F776E657221 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF0 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6F5 SWAP1 DUP5 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 DUP2 GT ISZERO PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB6E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x7BE SWAP1 DUP5 SWAP1 PUSH2 0xB97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x7EB SWAP1 DUP5 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 DUP2 GT ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB6E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x8D3 SWAP1 DUP5 SWAP1 PUSH2 0xB97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x905 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC6851889326B4FF916523EF06F539B4CF0B81D78FC6E0F97C30E6223D1831990 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x6E11FB1B7F119E3F2FA29896EF5FDF8B8A2D0D4DF6FE90BA8668E7D8B2FFA25E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x85D JUMPI PUSH2 0x85D PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9F7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9DB JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA50 DUP4 PUSH2 0xA18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7C DUP5 PUSH2 0xA18 JUMP JUMPDEST SWAP3 POP PUSH2 0xA8A PUSH1 0x20 DUP6 ADD PUSH2 0xA18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB5 DUP3 PUSH2 0xA18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF1 DUP4 PUSH2 0xA18 JUMP JUMPDEST SWAP2 POP PUSH2 0xAFF PUSH1 0x20 DUP5 ADD PUSH2 0xA18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB1C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB3C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x6E6F7420656E6F75676820746F6B656E7321 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x616D6F756E74206973207A65726F21 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x85D JUMPI PUSH2 0x85D PUSH2 0x9A1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO EXP 0xE7 0xD PUSH11 0x4A6BD3E138A3AF4681F559 0xAF 0xE3 PUSH11 0x9D810B025813777229E108 0xD6 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        81,
        3507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "12": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "25": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "36": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x237"
    },
    "40": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9DC29FAC"
    },
    "47": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24C"
    },
    "51": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA0712D68"
    },
    "58": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26C"
    },
    "62": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "69": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C"
    },
    "73": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "80": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "84": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE4849B32"
    },
    "91": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CC"
    },
    "95": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "107": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159"
    },
    "111": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "118": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "122": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "129": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "133": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "140": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C5"
    },
    "144": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "151": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E5"
    },
    "155": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "162": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "166": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "171": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "176": {
      "fn": null,
      "offset": [
        81,
        3507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "177": {
      "fn": "ERC20.<receive>",
      "offset": [
        614,
        615
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "179": {
      "fn": "ERC20.<receive>",
      "offset": [
        602,
        611
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "180": {
      "branch": 29,
      "fn": "ERC20.<receive>",
      "offset": [
        602,
        615
      ],
      "op": "GT",
      "path": "0"
    },
    "181": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "184": {
      "branch": 29,
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "187": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "194": {
      "op": "SHL"
    },
    "195": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "196": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "199": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "201": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "DUP3",
      "path": "0"
    },
    "202": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "ADD",
      "path": "0"
    },
    "203": {
      "op": "MSTORE"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "208": {
      "op": "DUP3"
    },
    "209": {
      "op": "ADD"
    },
    "210": {
      "op": "MSTORE"
    },
    "211": {
      "op": "PUSH17",
      "value": "0x6E6F7420656E6F7567682066756E647321"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "231": {
      "op": "SHL"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "234": {
      "op": "DUP3"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "op": "MSTORE"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "239": {
      "op": "ADD"
    },
    "240": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "243": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "244": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "DUP1",
      "path": "0"
    },
    "245": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "246": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "SUB",
      "path": "0"
    },
    "247": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "248": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "249": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "ERC20.<receive>",
      "offset": [
        657,
        667
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "251": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "253": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "254": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "255": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "256": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "258": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "260": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "261": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "264": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "265": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "DUP1",
      "path": "0"
    },
    "266": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "267": {
      "fn": "ERC20.<receive>",
      "offset": [
        672,
        681
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "268": {
      "fn": "ERC20.<receive>",
      "offset": [
        672,
        681
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "269": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "270": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "273": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "fn": "ERC20.<receive>",
      "offset": [
        672,
        681
      ],
      "op": "DUP5",
      "path": "0"
    },
    "275": {
      "fn": "ERC20.<receive>",
      "offset": [
        672,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "276": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B7"
    },
    "279": {
      "fn": "ERC20.<receive>",
      "jump": "i",
      "offset": [
        647,
        681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "280": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "281": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "282": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "283": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "284": {
      "op": "POP"
    },
    "285": {
      "op": "POP"
    },
    "286": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "288": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "289": {
      "fn": "ERC20.<receive>",
      "offset": [
        717,
        726
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "290": {
      "op": "DUP2"
    },
    "291": {
      "op": "MSTORE"
    },
    "292": {
      "fn": "ERC20.<receive>",
      "offset": [
        705,
        715
      ],
      "op": "CALLER",
      "path": "0"
    },
    "293": {
      "fn": "ERC20.<receive>",
      "offset": [
        705,
        715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "294": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2499A5330AB0979CC612135E7883EBC3CD5C9F7A8508F042540C34723348F632"
    },
    "327": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "333": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "334": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "335": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "336": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "SUB",
      "path": "0"
    },
    "337": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "338": {
      "fn": "ERC20.<receive>",
      "offset": [
        696,
        727
      ],
      "op": "LOG2",
      "path": "0"
    },
    "339": {
      "offset": [
        81,
        3507
      ],
      "op": "STOP",
      "path": "0"
    },
    "340": {
      "fn": "ERC20.<receive>",
      "offset": [
        81,
        3507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "fn": "ERC20.<receive>",
      "offset": [
        81,
        3507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "343": {
      "fn": "ERC20.<receive>",
      "offset": [
        81,
        3507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "344": {
      "first_revert": true,
      "fn": "ERC20.<receive>",
      "offset": [
        81,
        3507
      ],
      "op": "REVERT",
      "path": "0"
    },
    "345": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "346": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "347": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "348": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x165"
    },
    "352": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "356": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "REVERT",
      "path": "0"
    },
    "357": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "358": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "POP",
      "path": "0"
    },
    "359": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E"
    },
    "362": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EC"
    },
    "365": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMP",
      "path": "0"
    },
    "366": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "367": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "369": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "370": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "373": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "374": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "375": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CA"
    },
    "378": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "382": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "383": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "384": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "385": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "SUB",
      "path": "0"
    },
    "386": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "387": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "RETURN",
      "path": "0"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "390": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "DUP1",
      "path": "0"
    },
    "391": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "392": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x190"
    },
    "395": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "396": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "398": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "DUP1",
      "path": "0"
    },
    "399": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "REVERT",
      "path": "0"
    },
    "400": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "401": {
      "op": "POP"
    },
    "402": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "405": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F"
    },
    "408": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "409": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "411": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA34"
    },
    "414": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMP",
      "path": "0"
    },
    "415": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "416": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37E"
    },
    "419": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMP",
      "path": "0"
    },
    "420": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "421": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "STOP",
      "path": "0"
    },
    "422": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "423": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "424": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "DUP1",
      "path": "0"
    },
    "425": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "426": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "429": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "430": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "432": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "DUP1",
      "path": "0"
    },
    "433": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "REVERT",
      "path": "0"
    },
    "434": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "op": "POP"
    },
    "436": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1574,
        1586
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x3"
    },
    "438": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1574,
        1586
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "439": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "440": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "442": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "443": {
      "op": "SWAP1"
    },
    "444": {
      "op": "DUP2"
    },
    "445": {
      "op": "MSTORE"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "448": {
      "op": "ADD"
    },
    "449": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1504,
        1593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "452": {
      "op": "JUMP"
    },
    "453": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "454": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "455": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "456": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "457": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "460": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "461": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "463": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "464": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "REVERT",
      "path": "0"
    },
    "465": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "op": "POP"
    },
    "467": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "470": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "473": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "474": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "476": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5E"
    },
    "479": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2433,
        2862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "480": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "481": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38D"
    },
    "484": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2433,
        2862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "485": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "486": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "487": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "488": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "489": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "492": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "493": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "495": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "496": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "REVERT",
      "path": "0"
    },
    "497": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "501": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "502": {
      "fn": "ERC20.decimals",
      "offset": [
        1489,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x12"
    },
    "504": {
      "op": "DUP2"
    },
    "505": {
      "op": "MSTORE"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "508": {
      "op": "ADD"
    },
    "509": {
      "fn": "ERC20.decimals",
      "offset": [
        1424,
        1498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "512": {
      "op": "JUMP"
    },
    "513": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "514": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "515": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "516": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "517": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20D"
    },
    "520": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "521": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "523": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "524": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "REVERT",
      "path": "0"
    },
    "525": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "526": {
      "op": "POP"
    },
    "527": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B7"
    },
    "530": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21C"
    },
    "533": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "534": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "536": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9A"
    },
    "539": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1599,
        1707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "540": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "547": {
      "op": "SHL"
    },
    "548": {
      "op": "SUB"
    },
    "549": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "AND",
      "path": "0",
      "statement": 5
    },
    "550": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1656,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "552": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "553": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "554": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "555": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "557": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "559": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "560": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "562": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "563": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "564": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "565": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "566": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "567": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "568": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "569": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "571": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "574": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "575": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "577": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "DUP1",
      "path": "0"
    },
    "578": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "REVERT",
      "path": "0"
    },
    "579": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "POP",
      "path": "0"
    },
    "581": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E"
    },
    "584": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x538"
    },
    "587": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        1329,
        1414
      ],
      "op": "JUMP",
      "path": "0"
    },
    "588": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "591": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "592": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x258"
    },
    "595": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "596": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "598": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "REVERT",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "605": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x267"
    },
    "608": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "609": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "611": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA34"
    },
    "614": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3127,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "615": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "616": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "619": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3127,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "620": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "621": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "622": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "623": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "624": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278"
    },
    "627": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "628": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "630": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "631": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "632": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "637": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "640": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "641": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "643": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "646": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2868,
        3121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "647": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "648": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68C"
    },
    "651": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2868,
        3121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "652": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "653": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "654": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "655": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "656": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x298"
    },
    "659": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "660": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "662": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "663": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "REVERT",
      "path": "0"
    },
    "664": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "665": {
      "op": "POP"
    },
    "666": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "669": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A7"
    },
    "672": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "673": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "675": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA34"
    },
    "678": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1713,
        1981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "679": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "680": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74E"
    },
    "683": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1713,
        1981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "684": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "685": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "686": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "DUP1",
      "path": "0"
    },
    "687": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "688": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "691": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "692": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "694": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "DUP1",
      "path": "0"
    },
    "695": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "REVERT",
      "path": "0"
    },
    "696": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B7"
    },
    "701": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C7"
    },
    "704": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "705": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "707": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD5"
    },
    "710": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "711": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "712": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x836"
    },
    "715": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "716": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "717": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "718": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "719": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "720": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8"
    },
    "723": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "724": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "726": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "727": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "REVERT",
      "path": "0"
    },
    "728": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "729": {
      "op": "POP"
    },
    "730": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "733": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E7"
    },
    "736": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "737": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "739": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABC"
    },
    "742": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        740,
        945
      ],
      "op": "JUMP",
      "path": "0"
    },
    "743": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "744": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x863"
    },
    "747": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        740,
        945
      ],
      "op": "JUMP",
      "path": "0"
    },
    "748": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "749": {
      "fn": "ERC20.name",
      "offset": [
        1279,
        1292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "751": {
      "fn": "ERC20.name",
      "offset": [
        1311,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "753": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "754": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "755": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "758": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "759": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB08"
    },
    "762": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMP",
      "path": "0"
    },
    "763": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "764": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "765": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "767": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "768": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "770": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "771": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "772": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DIV",
      "path": "0"
    },
    "773": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "MUL",
      "path": "0"
    },
    "774": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "776": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "777": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "779": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "780": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "781": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "782": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "783": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "785": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "786": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "787": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "788": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "789": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "790": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "791": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "792": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "793": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "795": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "796": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP3",
      "path": "0"
    },
    "797": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "798": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "799": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x327"
    },
    "802": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "803": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB08"
    },
    "806": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMP",
      "path": "0"
    },
    "807": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "808": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "809": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "810": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x374"
    },
    "813": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "814": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "815": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "817": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "LT",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x349"
    },
    "821": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "822": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "825": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "826": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP4",
      "path": "0"
    },
    "827": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "828": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DIV",
      "path": "0"
    },
    "829": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "MUL",
      "path": "0"
    },
    "830": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP4",
      "path": "0"
    },
    "831": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "832": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "833": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "835": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "836": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "837": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x374"
    },
    "840": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMP",
      "path": "0"
    },
    "841": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "842": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP3",
      "path": "0"
    },
    "843": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "844": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "845": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "846": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "848": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "849": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "851": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "853": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "854": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "855": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "856": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "857": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "858": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "859": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "861": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "863": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "864": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "865": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "868": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "869": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP4",
      "path": "0"
    },
    "870": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "GT",
      "path": "0"
    },
    "871": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x357"
    },
    "874": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "875": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP3",
      "path": "0"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SUB",
      "path": "0"
    },
    "878": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "880": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "AND",
      "path": "0"
    },
    "881": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "DUP3",
      "path": "0"
    },
    "882": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "ADD",
      "path": "0"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "884": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "885": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "POP",
      "path": "0"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "POP",
      "path": "0"
    },
    "887": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "POP",
      "path": "0"
    },
    "888": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "POP",
      "path": "0"
    },
    "889": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "POP",
      "path": "0"
    },
    "890": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [
        1304,
        1316
      ],
      "op": "POP",
      "path": "0"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        1242,
        1323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "893": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        1242,
        1323
      ],
      "op": "JUMP",
      "path": "0"
    },
    "894": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "895": {
      "fn": "ERC20.approve",
      "offset": [
        2192,
        2229
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x389"
    },
    "898": {
      "fn": "ERC20.approve",
      "offset": [
        2201,
        2211
      ],
      "op": "CALLER",
      "path": "0"
    },
    "899": {
      "fn": "ERC20.approve",
      "offset": [
        2213,
        2220
      ],
      "op": "DUP4",
      "path": "0"
    },
    "900": {
      "fn": "ERC20.approve",
      "offset": [
        2222,
        2228
      ],
      "op": "DUP4",
      "path": "0"
    },
    "901": {
      "fn": "ERC20.approve",
      "offset": [
        2192,
        2200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x940"
    },
    "904": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2192,
        2229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "905": {
      "fn": "ERC20.approve",
      "offset": [
        2192,
        2229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "906": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "POP",
      "path": "0"
    },
    "907": {
      "fn": "ERC20.approve",
      "offset": [
        2125,
        2236
      ],
      "op": "POP",
      "path": "0"
    },
    "908": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2125,
        2236
      ],
      "op": "JUMP",
      "path": "0"
    },
    "909": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "910": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2526,
        2532
      ],
      "op": "DUP3",
      "path": "0"
    },
    "911": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2534,
        2540
      ],
      "op": "DUP2",
      "path": "0"
    },
    "912": {
      "offset": [
        1040,
        1046
      ],
      "op": "DUP1",
      "path": "0"
    },
    "913": {
      "offset": [
        1021,
        1036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AF"
    },
    "916": {
      "offset": [
        1031,
        1035
      ],
      "op": "DUP4",
      "path": "0"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "923": {
      "op": "SHL"
    },
    "924": {
      "op": "SUB"
    },
    "925": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "AND",
      "path": "0"
    },
    "926": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1656,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "928": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "929": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "930": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "931": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "933": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "935": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "936": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "939": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "940": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "941": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "942": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "943": {
      "offset": [
        1021,
        1036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "944": {
      "offset": [
        1021,
        1046
      ],
      "op": "LT",
      "path": "0"
    },
    "945": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1021,
        1046
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "946": {
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD"
    },
    "949": {
      "offset": [
        1013,
        1069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "950": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "952": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "offset": [
        1013,
        1069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "961": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "962": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "964": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "ADD",
      "path": "0"
    },
    "965": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "968": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "969": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB42"
    },
    "972": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1013,
        1069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "973": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "974": {
      "offset": [
        1096,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "976": {
      "offset": [
        1087,
        1093
      ],
      "op": "DUP2",
      "path": "0"
    },
    "977": {
      "offset": [
        1087,
        1097
      ],
      "op": "GT",
      "path": "0"
    },
    "978": {
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ED"
    },
    "981": {
      "offset": [
        1079,
        1117
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "982": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "984": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "offset": [
        1079,
        1117
      ],
      "op": "DUP2",
      "path": "0"
    },
    "993": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "994": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "996": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "ADD",
      "path": "0"
    },
    "997": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1000": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1001": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6E"
    },
    "1004": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1079,
        1117
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1005": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1012": {
      "op": "SHL"
    },
    "1013": {
      "op": "SUB"
    },
    "1014": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 8
    },
    "1015": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "AND",
      "path": "0"
    },
    "1016": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1018": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1019": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1020": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1021": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1023": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1025": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1026": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1027": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1028": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1030": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1031": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1032": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2636
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1033": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2637,
        2647
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1034": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2648
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1035": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1036": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1037": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2648
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1038": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1039": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1040": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2648
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1041": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2648
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1042": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2658
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1043": {
      "op": "GT"
    },
    "1044": {
      "branch": 30,
      "fn": "ERC20.transferFrom",
      "offset": [
        2617,
        2658
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1045": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x450"
    },
    "1048": {
      "branch": 30,
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1049": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1051": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1060": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1063": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1065": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1066": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "ADD",
      "path": "0"
    },
    "1067": {
      "op": "MSTORE"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "PUSH13",
      "value": "0x6E6F20616C6C6F77616E636521"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1094": {
      "op": "DUP3"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "op": "MSTORE"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1099": {
      "op": "ADD"
    },
    "1100": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1103": {
      "op": "JUMP"
    },
    "1104": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2609,
        2676
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 9
    },
    "1114": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "AND",
      "path": "0"
    },
    "1115": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1117": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1118": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1124": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1125": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1126": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1130": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1131": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1132": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2706,
        2716
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2717
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1135": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1136": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1137": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1138": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1139": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2717
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1141": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1142": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2721,
        2727
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1143": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2721,
        2727
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1144": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1145": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x483"
    },
    "1148": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2721,
        2727
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2721,
        2727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB97"
    },
    "1154": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2686,
        2727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1157": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1158": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2686,
        2727
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "op": "POP"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1167": {
      "op": "SHL"
    },
    "1168": {
      "op": "SUB"
    },
    "1169": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 10
    },
    "1170": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "AND",
      "path": "0"
    },
    "1171": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1173": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1174": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1175": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1176": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1178": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1184": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1185": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1186": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1187": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2759,
        2765
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1188": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2759,
        2765
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1189": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2755
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1190": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B0"
    },
    "1193": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1194": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2759,
        2765
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1195": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2759,
        2765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB97"
    },
    "1199": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2738,
        2765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1200": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1202": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1203": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2738,
        2765
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "SUB"
    },
    "1214": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 11
    },
    "1215": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "AND",
      "path": "0"
    },
    "1216": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1218": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1219": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1220": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1221": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1223": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1225": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1226": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1229": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1230": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1231": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1232": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2799,
        2805
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1233": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2799,
        2805
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1234": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1235": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DD"
    },
    "1238": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1239": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2799,
        2805
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1240": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2799,
        2805
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1241": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B7"
    },
    "1244": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2775,
        2805
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1245": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1246": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1247": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "POP",
      "path": "0"
    },
    "1248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "POP",
      "path": "0"
    },
    "1249": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2775,
        2805
      ],
      "op": "POP",
      "path": "0"
    },
    "1253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2837,
        2846
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 12
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "AND",
      "path": "0"
    },
    "1263": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2829,
        2835
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "op": "SUB"
    },
    "1272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "AND",
      "path": "0"
    },
    "1273": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1306": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2848,
        2854
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1307": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1310": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x529"
    },
    "1313": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1314": {
      "op": "DUP2"
    },
    "1315": {
      "op": "MSTORE"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "SWAP1"
    },
    "1320": {
      "op": "JUMP"
    },
    "1321": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1322": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1324": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1325": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1326": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1327": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "SUB",
      "path": "0"
    },
    "1328": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1329": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2820,
        2855
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1330": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "POP",
      "path": "0"
    },
    "1331": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "POP",
      "path": "0"
    },
    "1332": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "POP",
      "path": "0"
    },
    "1333": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "POP",
      "path": "0"
    },
    "1334": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2433,
        2862
      ],
      "op": "POP",
      "path": "0"
    },
    "1335": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        2433,
        2862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1336": {
      "fn": "ERC20.symbol",
      "offset": [
        1329,
        1414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1337": {
      "fn": "ERC20.symbol",
      "offset": [
        1368,
        1381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1339": {
      "fn": "ERC20.symbol",
      "offset": [
        1400,
        1407
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x2"
    },
    "1341": {
      "fn": "ERC20.symbol",
      "offset": [
        1393,
        1407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1342": {
      "fn": "ERC20.symbol",
      "offset": [
        1393,
        1407
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1343": {
      "fn": "ERC20.symbol",
      "offset": [
        1393,
        1407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "1346": {
      "fn": "ERC20.symbol",
      "offset": [
        1393,
        1407
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1347": {
      "fn": "ERC20.symbol",
      "offset": [
        1393,
        1407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB08"
    },
    "1350": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        1393,
        1407
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1351": {
      "fn": "ERC20.burn",
      "offset": [
        3127,
        3408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1352": {
      "offset": [
        1194,
        1200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1354": {
      "fn": "ERC20.burn",
      "offset": [
        1194,
        1200
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1361": {
      "op": "SHL"
    },
    "1362": {
      "op": "SUB"
    },
    "1363": {
      "offset": [
        1194,
        1200
      ],
      "op": "AND",
      "path": "0"
    },
    "1364": {
      "offset": [
        1180,
        1190
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1365": {
      "offset": [
        1180,
        1200
      ],
      "op": "EQ",
      "path": "0"
    },
    "1366": {
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x591"
    },
    "1369": {
      "offset": [
        1172,
        1218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1370": {
      "fn": "ERC20.burn",
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1372": {
      "fn": "ERC20.burn",
      "offset": [
        1172,
        1218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1379": {
      "op": "SHL"
    },
    "1380": {
      "offset": [
        1172,
        1218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1381": {
      "fn": "ERC20.burn",
      "offset": [
        1172,
        1218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1384": {
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1386": {
      "fn": "ERC20.burn",
      "offset": [
        1172,
        1218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1387": {
      "fn": "ERC20.burn",
      "offset": [
        1172,
        1218
      ],
      "op": "ADD",
      "path": "0"
    },
    "1388": {
      "op": "MSTORE"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1393": {
      "op": "DUP3"
    },
    "1394": {
      "op": "ADD"
    },
    "1395": {
      "op": "MSTORE"
    },
    "1396": {
      "op": "PUSH13",
      "value": "0x6E6F7420616E206F776E657221"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1415": {
      "op": "DUP3"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1424": {
      "op": "JUMP"
    },
    "1425": {
      "offset": [
        1172,
        1218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1426": {
      "fn": "ERC20.burn",
      "offset": [
        3201,
        3205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1427": {
      "fn": "ERC20.burn",
      "offset": [
        3207,
        3213
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1428": {
      "offset": [
        1040,
        1046
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1429": {
      "offset": [
        1021,
        1036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B3"
    },
    "1432": {
      "offset": [
        1031,
        1035
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "op": "SUB"
    },
    "1441": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "AND",
      "path": "0"
    },
    "1442": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1656,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1444": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1445": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1446": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1447": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1449": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1451": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1452": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1454": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1455": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1456": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1457": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1458": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1599,
        1707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1459": {
      "offset": [
        1021,
        1036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1460": {
      "offset": [
        1021,
        1046
      ],
      "op": "LT",
      "path": "0"
    },
    "1461": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1021,
        1046
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1462": {
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D1"
    },
    "1465": {
      "offset": [
        1013,
        1069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1466": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1468": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "offset": [
        1013,
        1069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1477": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1478": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1480": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "ADD",
      "path": "0"
    },
    "1481": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1484": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1485": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB42"
    },
    "1488": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1013,
        1069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1489": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1013,
        1069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1490": {
      "offset": [
        1096,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1492": {
      "offset": [
        1087,
        1093
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1493": {
      "offset": [
        1087,
        1097
      ],
      "op": "GT",
      "path": "0"
    },
    "1494": {
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F1"
    },
    "1497": {
      "offset": [
        1079,
        1117
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1498": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1500": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1501": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "offset": [
        1079,
        1117
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1509": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1510": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1512": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "ADD",
      "path": "0"
    },
    "1513": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1516": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1517": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6E"
    },
    "1520": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1079,
        1117
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1521": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1079,
        1117
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1522": {
      "fn": "ERC20.burn",
      "offset": [
        3257,
        3258
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "1524": {
      "fn": "ERC20.burn",
      "offset": [
        3248,
        3254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1525": {
      "fn": "ERC20.burn",
      "offset": [
        3233,
        3245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1527": {
      "fn": "ERC20.burn",
      "offset": [
        3233,
        3245
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1528": {
      "fn": "ERC20.burn",
      "offset": [
        3233,
        3254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x601"
    },
    "1531": {
      "fn": "ERC20.burn",
      "offset": [
        3233,
        3254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1532": {
      "fn": "ERC20.burn",
      "offset": [
        3233,
        3254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1533": {
      "fn": "ERC20.burn",
      "offset": [
        3233,
        3254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB97"
    },
    "1536": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3233,
        3254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1537": {
      "fn": "ERC20.burn",
      "offset": [
        3233,
        3254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1538": {
      "branch": 31,
      "fn": "ERC20.burn",
      "offset": [
        3233,
        3258
      ],
      "op": "GT",
      "path": "0"
    },
    "1539": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x640"
    },
    "1542": {
      "branch": 31,
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1543": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1545": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1554": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1557": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1559": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1560": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "ADD",
      "path": "0"
    },
    "1561": {
      "op": "MSTORE"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1566": {
      "op": "DUP3"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH15",
      "value": "0x63616E6E6F74206265207A65726F21"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1587": {
      "op": "SHL"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1590": {
      "op": "DUP3"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "MSTORE"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1595": {
      "op": "ADD"
    },
    "1596": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1599": {
      "op": "JUMP"
    },
    "1600": {
      "fn": "ERC20.burn",
      "offset": [
        3225,
        3278
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1607": {
      "op": "SHL"
    },
    "1608": {
      "op": "SUB"
    },
    "1609": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 15
    },
    "1610": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "AND",
      "path": "0"
    },
    "1611": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1613": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1614": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1615": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1616": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1618": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1620": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1621": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1623": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1624": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1625": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1626": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1627": {
      "fn": "ERC20.burn",
      "offset": [
        3363,
        3369
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1628": {
      "fn": "ERC20.burn",
      "offset": [
        3363,
        3369
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1629": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1630": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x668"
    },
    "1633": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1634": {
      "fn": "ERC20.burn",
      "offset": [
        3363,
        3369
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1635": {
      "fn": "ERC20.burn",
      "offset": [
        3363,
        3369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1636": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB97"
    },
    "1639": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3344,
        3369
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1640": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1641": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1642": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "POP",
      "path": "0"
    },
    "1643": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "POP",
      "path": "0"
    },
    "1644": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1645": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1646": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1647": {
      "fn": "ERC20.burn",
      "offset": [
        3344,
        3369
      ],
      "op": "POP",
      "path": "0"
    },
    "1648": {
      "fn": "ERC20.burn",
      "offset": [
        3395,
        3401
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 16
    },
    "1649": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1651": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1653": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1654": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1655": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1656": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x681"
    },
    "1659": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1660": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1661": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB97"
    },
    "1664": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3379,
        3401
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1665": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1666": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1667": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1668": {
      "fn": "ERC20.burn",
      "offset": [
        3379,
        3401
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "op": "POP"
    },
    "1672": {
      "op": "POP"
    },
    "1673": {
      "op": "POP"
    },
    "1674": {
      "op": "POP"
    },
    "1675": {
      "fn": "ERC20.burn",
      "jump": "o",
      "offset": [
        3127,
        3408
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1676": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1677": {
      "offset": [
        1194,
        1200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1679": {
      "fn": "ERC20.mint",
      "offset": [
        1194,
        1200
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "op": "SUB"
    },
    "1688": {
      "offset": [
        1194,
        1200
      ],
      "op": "AND",
      "path": "0"
    },
    "1689": {
      "offset": [
        1180,
        1190
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1690": {
      "offset": [
        1180,
        1200
      ],
      "op": "EQ",
      "path": "0"
    },
    "1691": {
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D6"
    },
    "1694": {
      "offset": [
        1172,
        1218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1695": {
      "fn": "ERC20.mint",
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1697": {
      "fn": "ERC20.mint",
      "offset": [
        1172,
        1218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "offset": [
        1172,
        1218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1706": {
      "fn": "ERC20.mint",
      "offset": [
        1172,
        1218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1709": {
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1711": {
      "fn": "ERC20.mint",
      "offset": [
        1172,
        1218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1712": {
      "fn": "ERC20.mint",
      "offset": [
        1172,
        1218
      ],
      "op": "ADD",
      "path": "0"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1718": {
      "op": "DUP3"
    },
    "1719": {
      "op": "ADD"
    },
    "1720": {
      "op": "MSTORE"
    },
    "1721": {
      "op": "PUSH13",
      "value": "0x6E6F7420616E206F776E657221"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1740": {
      "op": "DUP3"
    },
    "1741": {
      "op": "ADD"
    },
    "1742": {
      "op": "MSTORE"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1749": {
      "op": "JUMP"
    },
    "1750": {
      "offset": [
        1172,
        1218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1751": {
      "fn": "ERC20.mint",
      "offset": [
        3008,
        3012
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 17
    },
    "1752": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1754": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1755": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1756": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1757": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        2999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1759": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1761": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1762": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1764": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1765": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1766": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1767": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1768": {
      "fn": "ERC20.mint",
      "offset": [
        3018,
        3024
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1769": {
      "fn": "ERC20.mint",
      "offset": [
        3018,
        3024
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1770": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1771": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F5"
    },
    "1774": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1775": {
      "fn": "ERC20.mint",
      "offset": [
        3018,
        3024
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1776": {
      "fn": "ERC20.mint",
      "offset": [
        3018,
        3024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1777": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B7"
    },
    "1780": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2990,
        3024
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1781": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1782": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1783": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "POP",
      "path": "0"
    },
    "1784": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "POP",
      "path": "0"
    },
    "1785": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1786": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1787": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1788": {
      "fn": "ERC20.mint",
      "offset": [
        2990,
        3024
      ],
      "op": "POP",
      "path": "0"
    },
    "1789": {
      "fn": "ERC20.mint",
      "offset": [
        3050,
        3056
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 18
    },
    "1790": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1792": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1794": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1795": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1796": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1797": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70E"
    },
    "1800": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1801": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B7"
    },
    "1805": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        3034,
        3056
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1806": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1807": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1808": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1809": {
      "fn": "ERC20.mint",
      "offset": [
        3034,
        3056
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x40"
    },
    "1814": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1815": {
      "op": "DUP2"
    },
    "1816": {
      "op": "DUP2"
    },
    "1817": {
      "op": "MSTORE"
    },
    "1818": {
      "fn": "ERC20.mint",
      "offset": [
        3100,
        3104
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1819": {
      "fn": "ERC20.mint",
      "offset": [
        3100,
        3104
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1820": {
      "fn": "ERC20.mint",
      "offset": [
        3088,
        3089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1822": {
      "fn": "ERC20.mint",
      "offset": [
        3088,
        3089
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1823": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1856": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1859": {
      "op": "ADD"
    },
    "1860": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1862": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1863": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1864": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1865": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "SUB",
      "path": "0"
    },
    "1866": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1867": {
      "fn": "ERC20.mint",
      "offset": [
        3071,
        3114
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1868": {
      "fn": "ERC20.mint",
      "offset": [
        2868,
        3121
      ],
      "op": "POP",
      "path": "0"
    },
    "1869": {
      "fn": "ERC20.mint",
      "jump": "o",
      "offset": [
        2868,
        3121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1870": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1871": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1789
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1872": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1656,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1874": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1875": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1876": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1877": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1879": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1881": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1882": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1884": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1885": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1886": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1887": {
      "fn": "ERC20.transfer",
      "offset": [
        1791,
        1797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1888": {
      "fn": "ERC20.transfer",
      "offset": [
        1791,
        1797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1889": {
      "fn": "ERC20.transfer",
      "offset": [
        1791,
        1797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1890": {
      "op": "GT"
    },
    "1891": {
      "offset": [
        1021,
        1046
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1892": {
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77F"
    },
    "1895": {
      "offset": [
        1013,
        1069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1896": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1898": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "offset": [
        1013,
        1069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1907": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1908": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1910": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "ADD",
      "path": "0"
    },
    "1911": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1914": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1915": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB42"
    },
    "1918": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1013,
        1069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1919": {
      "fn": "ERC20.transfer",
      "offset": [
        1013,
        1069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1920": {
      "offset": [
        1096,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1922": {
      "offset": [
        1087,
        1093
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1923": {
      "offset": [
        1087,
        1097
      ],
      "op": "GT",
      "path": "0"
    },
    "1924": {
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79F"
    },
    "1927": {
      "offset": [
        1079,
        1117
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1928": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1930": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "offset": [
        1079,
        1117
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1939": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1940": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1942": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "ADD",
      "path": "0"
    },
    "1943": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1946": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1947": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6E"
    },
    "1950": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1079,
        1117
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1951": {
      "fn": "ERC20.transfer",
      "offset": [
        1079,
        1117
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1952": {
      "fn": "ERC20.transfer",
      "offset": [
        1873,
        1883
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 20
    },
    "1953": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1955": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1956": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1957": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1958": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1960": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1962": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1963": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1965": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1966": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1967": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1968": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1969": {
      "fn": "ERC20.transfer",
      "offset": [
        1888,
        1894
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1970": {
      "fn": "ERC20.transfer",
      "offset": [
        1888,
        1894
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1971": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1972": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BE"
    },
    "1975": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1976": {
      "fn": "ERC20.transfer",
      "offset": [
        1888,
        1894
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1977": {
      "fn": "ERC20.transfer",
      "offset": [
        1888,
        1894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1978": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB97"
    },
    "1981": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1863,
        1894
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1982": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1984": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1985": {
      "fn": "ERC20.transfer",
      "offset": [
        1863,
        1894
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1994": {
      "op": "SHL"
    },
    "1995": {
      "op": "SUB"
    },
    "1996": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 21
    },
    "1997": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "AND",
      "path": "0"
    },
    "1998": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2000": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2001": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2002": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2003": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2005": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2007": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2008": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2010": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2011": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2012": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2013": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2014": {
      "fn": "ERC20.transfer",
      "offset": [
        1921,
        1927
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2015": {
      "fn": "ERC20.transfer",
      "offset": [
        1921,
        1927
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2016": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2017": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EB"
    },
    "2020": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2021": {
      "fn": "ERC20.transfer",
      "offset": [
        1921,
        1927
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2022": {
      "fn": "ERC20.transfer",
      "offset": [
        1921,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2023": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B7"
    },
    "2026": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1904,
        1927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2027": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2028": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2029": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2030": {
      "fn": "ERC20.transfer",
      "offset": [
        1904,
        1927
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x40"
    },
    "2035": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2036": {
      "op": "DUP4"
    },
    "2037": {
      "op": "DUP2"
    },
    "2038": {
      "op": "MSTORE"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2045": {
      "op": "SHL"
    },
    "2046": {
      "op": "SUB"
    },
    "2047": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2048": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "AND",
      "path": "0"
    },
    "2049": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2050": {
      "fn": "ERC20.transfer",
      "offset": [
        1951,
        1961
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2051": {
      "fn": "ERC20.transfer",
      "offset": [
        1951,
        1961
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2052": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2085": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2088": {
      "op": "ADD"
    },
    "2089": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2091": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2092": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2093": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2094": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "SUB",
      "path": "0"
    },
    "2095": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2096": {
      "fn": "ERC20.transfer",
      "offset": [
        1942,
        1974
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2097": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "POP",
      "path": "0"
    },
    "2098": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "POP",
      "path": "0"
    },
    "2099": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "POP",
      "path": "0"
    },
    "2100": {
      "fn": "ERC20.transfer",
      "offset": [
        1713,
        1981
      ],
      "op": "POP",
      "path": "0"
    },
    "2101": {
      "fn": "ERC20.transfer",
      "jump": "o",
      "offset": [
        1713,
        1981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2102": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "SUB"
    },
    "2111": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 23
    },
    "2112": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2113": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "AND",
      "path": "0"
    },
    "2114": {
      "fn": "ERC20.allowance",
      "offset": [
        2059,
        2066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2116": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2117": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2118": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2119": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2121": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2123": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2124": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2125": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2126": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2128": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2129": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2130": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2103
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2131": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2132": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2133": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "AND",
      "path": "0"
    },
    "2134": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2135": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2136": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2137": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2138": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2139": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2140": {
      "fn": "ERC20.allowance",
      "offset": [
        2085,
        2112
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2141": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2142": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2143": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2144": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "POP",
      "path": "0"
    },
    "2145": {
      "fn": "ERC20.allowance",
      "offset": [
        1987,
        2119
      ],
      "op": "POP",
      "path": "0"
    },
    "2146": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1987,
        2119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2147": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2148": {
      "fn": "ERC20.sell",
      "offset": [
        792,
        802
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2149": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1656,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2151": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2152": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2153": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2154": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2156": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2158": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2159": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2161": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2162": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2163": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1682,
        1700
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2164": {
      "fn": "ERC20.sell",
      "offset": [
        804,
        810
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2165": {
      "fn": "ERC20.sell",
      "offset": [
        804,
        810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2166": {
      "fn": "ERC20.sell",
      "offset": [
        804,
        810
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2167": {
      "op": "GT"
    },
    "2168": {
      "offset": [
        1021,
        1046
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2169": {
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x894"
    },
    "2172": {
      "offset": [
        1013,
        1069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2173": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2175": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2176": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2182": {
      "op": "SHL"
    },
    "2183": {
      "offset": [
        1013,
        1069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2184": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2185": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2187": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "ADD",
      "path": "0"
    },
    "2188": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "2191": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2192": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB42"
    },
    "2195": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        1013,
        1069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2196": {
      "fn": "ERC20.sell",
      "offset": [
        1013,
        1069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2197": {
      "offset": [
        1096,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2199": {
      "offset": [
        1087,
        1093
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2200": {
      "offset": [
        1087,
        1097
      ],
      "op": "GT",
      "path": "0"
    },
    "2201": {
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B4"
    },
    "2204": {
      "offset": [
        1079,
        1117
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2205": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2207": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2214": {
      "op": "SHL"
    },
    "2215": {
      "offset": [
        1079,
        1117
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2216": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2217": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2219": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "ADD",
      "path": "0"
    },
    "2220": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "2223": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2224": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6E"
    },
    "2227": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        1079,
        1117
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2228": {
      "fn": "ERC20.sell",
      "offset": [
        1079,
        1117
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2229": {
      "fn": "ERC20.sell",
      "offset": [
        832,
        842
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 24
    },
    "2230": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2232": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2233": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2234": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2235": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2237": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2239": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2240": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2242": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2243": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2244": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2245": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2246": {
      "fn": "ERC20.sell",
      "offset": [
        847,
        853
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2247": {
      "fn": "ERC20.sell",
      "offset": [
        847,
        853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2248": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2249": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D3"
    },
    "2252": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2253": {
      "fn": "ERC20.sell",
      "offset": [
        847,
        853
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2254": {
      "fn": "ERC20.sell",
      "offset": [
        847,
        853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2255": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB97"
    },
    "2258": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        822,
        853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2259": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2260": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2261": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2262": {
      "fn": "ERC20.sell",
      "offset": [
        822,
        853
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "op": "POP"
    },
    "2265": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x40"
    },
    "2267": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2268": {
      "fn": "ERC20.sell",
      "offset": [
        871,
        881
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2269": {
      "fn": "ERC20.sell",
      "offset": [
        871,
        881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2270": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2271": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2272": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "2275": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "MUL",
      "path": "0"
    },
    "2276": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2277": {
      "fn": "ERC20.sell",
      "offset": [
        892,
        898
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2278": {
      "fn": "ERC20.sell",
      "offset": [
        892,
        898
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2279": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2281": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2282": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2283": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2284": {
      "fn": "ERC20.sell",
      "offset": [
        892,
        898
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2285": {
      "fn": "ERC20.sell",
      "offset": [
        871,
        881
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2286": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2287": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "CALL",
      "path": "0"
    },
    "2288": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2289": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "POP",
      "path": "0"
    },
    "2290": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "POP",
      "path": "0"
    },
    "2291": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "POP",
      "path": "0"
    },
    "2292": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "POP",
      "path": "0"
    },
    "2293": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2294": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2295": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2296": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x905"
    },
    "2299": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2300": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2301": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2303": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2304": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2305": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2306": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2308": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2309": {
      "fn": "ERC20.sell",
      "offset": [
        863,
        899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x40"
    },
    "2313": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2314": {
      "op": "DUP4"
    },
    "2315": {
      "op": "DUP2"
    },
    "2316": {
      "op": "MSTORE"
    },
    "2317": {
      "fn": "ERC20.sell",
      "offset": [
        919,
        929
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2318": {
      "fn": "ERC20.sell",
      "offset": [
        919,
        929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2319": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC6851889326B4FF916523EF06F539B4CF0B81D78FC6E0F97C30E6223D1831990"
    },
    "2352": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2355": {
      "op": "ADD"
    },
    "2356": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2358": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2359": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2360": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2361": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "SUB",
      "path": "0"
    },
    "2362": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2363": {
      "fn": "ERC20.sell",
      "offset": [
        914,
        938
      ],
      "op": "LOG2",
      "path": "0"
    },
    "2364": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "POP",
      "path": "0"
    },
    "2365": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "POP",
      "path": "0"
    },
    "2366": {
      "fn": "ERC20.sell",
      "offset": [
        740,
        945
      ],
      "op": "POP",
      "path": "0"
    },
    "2367": {
      "fn": "ERC20.sell",
      "jump": "o",
      "offset": [
        740,
        945
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2368": {
      "fn": "ERC20._approve",
      "offset": [
        2242,
        2427
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2375": {
      "op": "SHL"
    },
    "2376": {
      "op": "SUB"
    },
    "2377": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 27
    },
    "2378": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2379": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "AND",
      "path": "0"
    },
    "2380": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2382": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2383": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2384": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2385": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2387": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2389": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2390": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2391": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2392": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2394": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2395": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2396": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2355
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2397": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2398": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2399": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "AND",
      "path": "0"
    },
    "2400": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2401": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2402": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2403": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2404": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2405": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2406": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2407": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2408": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2409": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2364
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2410": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2373
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2411": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2412": {
      "fn": "ERC20._approve",
      "offset": [
        2336,
        2373
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2413": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 28
    },
    "2414": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2415": {
      "op": "DUP5"
    },
    "2416": {
      "op": "DUP2"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x6E11FB1B7F119E3F2FA29896EF5FDF8B8A2D0D4DF6FE90BA8668E7D8B2FFA25E"
    },
    "2451": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2452": {
      "op": "ADD"
    },
    "2453": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2455": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2456": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2457": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2458": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "SUB",
      "path": "0"
    },
    "2459": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2460": {
      "fn": "ERC20._approve",
      "offset": [
        2388,
        2420
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2461": {
      "fn": "ERC20._approve",
      "offset": [
        2242,
        2427
      ],
      "op": "POP",
      "path": "0"
    },
    "2462": {
      "fn": "ERC20._approve",
      "offset": [
        2242,
        2427
      ],
      "op": "POP",
      "path": "0"
    },
    "2463": {
      "fn": "ERC20._approve",
      "offset": [
        2242,
        2427
      ],
      "op": "POP",
      "path": "0"
    },
    "2464": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        2242,
        2427
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2465": {
      "op": "JUMPDEST"
    },
    "2466": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2476": {
      "op": "MSTORE"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2486": {
      "op": "REVERT"
    },
    "2487": {
      "op": "JUMPDEST"
    },
    "2488": {
      "op": "DUP1"
    },
    "2489": {
      "op": "DUP3"
    },
    "2490": {
      "op": "ADD"
    },
    "2491": {
      "op": "DUP1"
    },
    "2492": {
      "op": "DUP3"
    },
    "2493": {
      "op": "GT"
    },
    "2494": {
      "op": "ISZERO"
    },
    "2495": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2498": {
      "op": "JUMPI"
    },
    "2499": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2502": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "2505": {
      "jump": "i",
      "op": "JUMP"
    },
    "2506": {
      "op": "JUMPDEST"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2511": {
      "op": "DUP1"
    },
    "2512": {
      "op": "DUP4"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "DUP4"
    },
    "2515": {
      "op": "MLOAD"
    },
    "2516": {
      "op": "DUP1"
    },
    "2517": {
      "op": "DUP3"
    },
    "2518": {
      "op": "DUP6"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "op": "MSTORE"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2523": {
      "op": "JUMPDEST"
    },
    "2524": {
      "op": "DUP2"
    },
    "2525": {
      "op": "DUP2"
    },
    "2526": {
      "op": "LT"
    },
    "2527": {
      "op": "ISZERO"
    },
    "2528": {
      "op": "PUSH2",
      "value": "0x9F7"
    },
    "2531": {
      "op": "JUMPI"
    },
    "2532": {
      "op": "DUP6"
    },
    "2533": {
      "op": "DUP2"
    },
    "2534": {
      "op": "ADD"
    },
    "2535": {
      "op": "DUP4"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "op": "MLOAD"
    },
    "2538": {
      "op": "DUP6"
    },
    "2539": {
      "op": "DUP3"
    },
    "2540": {
      "op": "ADD"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2543": {
      "op": "ADD"
    },
    "2544": {
      "op": "MSTORE"
    },
    "2545": {
      "op": "DUP3"
    },
    "2546": {
      "op": "ADD"
    },
    "2547": {
      "op": "PUSH2",
      "value": "0x9DB"
    },
    "2550": {
      "op": "JUMP"
    },
    "2551": {
      "op": "JUMPDEST"
    },
    "2552": {
      "op": "POP"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "DUP7"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "ADD"
    },
    "2561": {
      "op": "MSTORE"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2566": {
      "op": "NOT"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2569": {
      "op": "DUP4"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "op": "AND"
    },
    "2572": {
      "op": "DUP6"
    },
    "2573": {
      "op": "ADD"
    },
    "2574": {
      "op": "ADD"
    },
    "2575": {
      "op": "SWAP3"
    },
    "2576": {
      "op": "POP"
    },
    "2577": {
      "op": "POP"
    },
    "2578": {
      "op": "POP"
    },
    "2579": {
      "op": "SWAP3"
    },
    "2580": {
      "op": "SWAP2"
    },
    "2581": {
      "op": "POP"
    },
    "2582": {
      "op": "POP"
    },
    "2583": {
      "jump": "o",
      "op": "JUMP"
    },
    "2584": {
      "op": "JUMPDEST"
    },
    "2585": {
      "op": "DUP1"
    },
    "2586": {
      "op": "CALLDATALOAD"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "op": "SUB"
    },
    "2595": {
      "op": "DUP2"
    },
    "2596": {
      "op": "AND"
    },
    "2597": {
      "op": "DUP2"
    },
    "2598": {
      "op": "EQ"
    },
    "2599": {
      "op": "PUSH2",
      "value": "0xA2F"
    },
    "2602": {
      "op": "JUMPI"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2605": {
      "op": "DUP1"
    },
    "2606": {
      "op": "REVERT"
    },
    "2607": {
      "op": "JUMPDEST"
    },
    "2608": {
      "op": "SWAP2"
    },
    "2609": {
      "op": "SWAP1"
    },
    "2610": {
      "op": "POP"
    },
    "2611": {
      "jump": "o",
      "op": "JUMP"
    },
    "2612": {
      "op": "JUMPDEST"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2615": {
      "op": "DUP1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2618": {
      "op": "DUP4"
    },
    "2619": {
      "op": "DUP6"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "op": "SLT"
    },
    "2622": {
      "op": "ISZERO"
    },
    "2623": {
      "op": "PUSH2",
      "value": "0xA47"
    },
    "2626": {
      "op": "JUMPI"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2629": {
      "op": "DUP1"
    },
    "2630": {
      "op": "REVERT"
    },
    "2631": {
      "op": "JUMPDEST"
    },
    "2632": {
      "op": "PUSH2",
      "value": "0xA50"
    },
    "2635": {
      "op": "DUP4"
    },
    "2636": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2639": {
      "jump": "i",
      "op": "JUMP"
    },
    "2640": {
      "op": "JUMPDEST"
    },
    "2641": {
      "op": "SWAP5"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2644": {
      "op": "SWAP4"
    },
    "2645": {
      "op": "SWAP1"
    },
    "2646": {
      "op": "SWAP4"
    },
    "2647": {
      "op": "ADD"
    },
    "2648": {
      "op": "CALLDATALOAD"
    },
    "2649": {
      "op": "SWAP4"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "op": "POP"
    },
    "2653": {
      "jump": "o",
      "op": "JUMP"
    },
    "2654": {
      "op": "JUMPDEST"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2657": {
      "op": "DUP1"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2662": {
      "op": "DUP5"
    },
    "2663": {
      "op": "DUP7"
    },
    "2664": {
      "op": "SUB"
    },
    "2665": {
      "op": "SLT"
    },
    "2666": {
      "op": "ISZERO"
    },
    "2667": {
      "op": "PUSH2",
      "value": "0xA73"
    },
    "2670": {
      "op": "JUMPI"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2673": {
      "op": "DUP1"
    },
    "2674": {
      "op": "REVERT"
    },
    "2675": {
      "op": "JUMPDEST"
    },
    "2676": {
      "op": "PUSH2",
      "value": "0xA7C"
    },
    "2679": {
      "op": "DUP5"
    },
    "2680": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2683": {
      "jump": "i",
      "op": "JUMP"
    },
    "2684": {
      "op": "JUMPDEST"
    },
    "2685": {
      "op": "SWAP3"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "PUSH2",
      "value": "0xA8A"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2692": {
      "op": "DUP6"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2697": {
      "jump": "i",
      "op": "JUMP"
    },
    "2698": {
      "op": "JUMPDEST"
    },
    "2699": {
      "op": "SWAP2"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2703": {
      "op": "DUP5"
    },
    "2704": {
      "op": "ADD"
    },
    "2705": {
      "op": "CALLDATALOAD"
    },
    "2706": {
      "op": "SWAP1"
    },
    "2707": {
      "op": "POP"
    },
    "2708": {
      "op": "SWAP3"
    },
    "2709": {
      "op": "POP"
    },
    "2710": {
      "op": "SWAP3"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "op": "SWAP3"
    },
    "2713": {
      "jump": "o",
      "op": "JUMP"
    },
    "2714": {
      "op": "JUMPDEST"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "DUP5"
    },
    "2721": {
      "op": "SUB"
    },
    "2722": {
      "op": "SLT"
    },
    "2723": {
      "op": "ISZERO"
    },
    "2724": {
      "op": "PUSH2",
      "value": "0xAAC"
    },
    "2727": {
      "op": "JUMPI"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2730": {
      "op": "DUP1"
    },
    "2731": {
      "op": "REVERT"
    },
    "2732": {
      "op": "JUMPDEST"
    },
    "2733": {
      "op": "PUSH2",
      "value": "0xAB5"
    },
    "2736": {
      "op": "DUP3"
    },
    "2737": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2740": {
      "jump": "i",
      "op": "JUMP"
    },
    "2741": {
      "op": "JUMPDEST"
    },
    "2742": {
      "op": "SWAP4"
    },
    "2743": {
      "op": "SWAP3"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "op": "POP"
    },
    "2747": {
      "jump": "o",
      "op": "JUMP"
    },
    "2748": {
      "op": "JUMPDEST"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2753": {
      "op": "DUP3"
    },
    "2754": {
      "op": "DUP5"
    },
    "2755": {
      "op": "SUB"
    },
    "2756": {
      "op": "SLT"
    },
    "2757": {
      "op": "ISZERO"
    },
    "2758": {
      "op": "PUSH2",
      "value": "0xACE"
    },
    "2761": {
      "op": "JUMPI"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2764": {
      "op": "DUP1"
    },
    "2765": {
      "op": "REVERT"
    },
    "2766": {
      "op": "JUMPDEST"
    },
    "2767": {
      "op": "POP"
    },
    "2768": {
      "op": "CALLDATALOAD"
    },
    "2769": {
      "op": "SWAP2"
    },
    "2770": {
      "op": "SWAP1"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "jump": "o",
      "op": "JUMP"
    },
    "2773": {
      "op": "JUMPDEST"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2776": {
      "op": "DUP1"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2779": {
      "op": "DUP4"
    },
    "2780": {
      "op": "DUP6"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "op": "SLT"
    },
    "2783": {
      "op": "ISZERO"
    },
    "2784": {
      "op": "PUSH2",
      "value": "0xAE8"
    },
    "2787": {
      "op": "JUMPI"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2790": {
      "op": "DUP1"
    },
    "2791": {
      "op": "REVERT"
    },
    "2792": {
      "op": "JUMPDEST"
    },
    "2793": {
      "op": "PUSH2",
      "value": "0xAF1"
    },
    "2796": {
      "op": "DUP4"
    },
    "2797": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2800": {
      "jump": "i",
      "op": "JUMP"
    },
    "2801": {
      "op": "JUMPDEST"
    },
    "2802": {
      "op": "SWAP2"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "op": "PUSH2",
      "value": "0xAFF"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2809": {
      "op": "DUP5"
    },
    "2810": {
      "op": "ADD"
    },
    "2811": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2814": {
      "jump": "i",
      "op": "JUMP"
    },
    "2815": {
      "op": "JUMPDEST"
    },
    "2816": {
      "op": "SWAP1"
    },
    "2817": {
      "op": "POP"
    },
    "2818": {
      "op": "SWAP3"
    },
    "2819": {
      "op": "POP"
    },
    "2820": {
      "op": "SWAP3"
    },
    "2821": {
      "op": "SWAP1"
    },
    "2822": {
      "op": "POP"
    },
    "2823": {
      "jump": "o",
      "op": "JUMP"
    },
    "2824": {
      "op": "JUMPDEST"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2827": {
      "op": "DUP2"
    },
    "2828": {
      "op": "DUP2"
    },
    "2829": {
      "op": "SHR"
    },
    "2830": {
      "op": "SWAP1"
    },
    "2831": {
      "op": "DUP3"
    },
    "2832": {
      "op": "AND"
    },
    "2833": {
      "op": "DUP1"
    },
    "2834": {
      "op": "PUSH2",
      "value": "0xB1C"
    },
    "2837": {
      "op": "JUMPI"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2840": {
      "op": "DUP3"
    },
    "2841": {
      "op": "AND"
    },
    "2842": {
      "op": "SWAP2"
    },
    "2843": {
      "op": "POP"
    },
    "2844": {
      "op": "JUMPDEST"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2847": {
      "op": "DUP3"
    },
    "2848": {
      "op": "LT"
    },
    "2849": {
      "op": "DUP2"
    },
    "2850": {
      "op": "SUB"
    },
    "2851": {
      "op": "PUSH2",
      "value": "0xB3C"
    },
    "2854": {
      "op": "JUMPI"
    },
    "2855": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2862": {
      "op": "SHL"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2865": {
      "op": "MSTORE"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2870": {
      "op": "MSTORE"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2875": {
      "op": "REVERT"
    },
    "2876": {
      "op": "JUMPDEST"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "op": "SWAP2"
    },
    "2879": {
      "op": "SWAP1"
    },
    "2880": {
      "op": "POP"
    },
    "2881": {
      "jump": "o",
      "op": "JUMP"
    },
    "2882": {
      "op": "JUMPDEST"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2885": {
      "op": "DUP1"
    },
    "2886": {
      "op": "DUP3"
    },
    "2887": {
      "op": "MSTORE"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2890": {
      "op": "SWAP1"
    },
    "2891": {
      "op": "DUP3"
    },
    "2892": {
      "op": "ADD"
    },
    "2893": {
      "op": "MSTORE"
    },
    "2894": {
      "op": "PUSH18",
      "value": "0x6E6F7420656E6F75676820746F6B656E7321"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2915": {
      "op": "SHL"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2918": {
      "op": "DUP3"
    },
    "2919": {
      "op": "ADD"
    },
    "2920": {
      "op": "MSTORE"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2923": {
      "op": "ADD"
    },
    "2924": {
      "op": "SWAP1"
    },
    "2925": {
      "jump": "o",
      "op": "JUMP"
    },
    "2926": {
      "op": "JUMPDEST"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2929": {
      "op": "DUP1"
    },
    "2930": {
      "op": "DUP3"
    },
    "2931": {
      "op": "MSTORE"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2934": {
      "op": "SWAP1"
    },
    "2935": {
      "op": "DUP3"
    },
    "2936": {
      "op": "ADD"
    },
    "2937": {
      "op": "MSTORE"
    },
    "2938": {
      "op": "PUSH15",
      "value": "0x616D6F756E74206973207A65726F21"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2956": {
      "op": "SHL"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2959": {
      "op": "DUP3"
    },
    "2960": {
      "op": "ADD"
    },
    "2961": {
      "op": "MSTORE"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2964": {
      "op": "ADD"
    },
    "2965": {
      "op": "SWAP1"
    },
    "2966": {
      "jump": "o",
      "op": "JUMP"
    },
    "2967": {
      "op": "JUMPDEST"
    },
    "2968": {
      "op": "DUP2"
    },
    "2969": {
      "op": "DUP2"
    },
    "2970": {
      "op": "SUB"
    },
    "2971": {
      "op": "DUP2"
    },
    "2972": {
      "op": "DUP2"
    },
    "2973": {
      "op": "GT"
    },
    "2974": {
      "op": "ISZERO"
    },
    "2975": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2978": {
      "op": "JUMPI"
    },
    "2979": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2982": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "2985": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "c81f469bb74515ae7e1350149b5ba730d480c9ea",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\ncontract ERC20 is IERC20 {\n    address private _owner;\n    string private _name;\n    string private _symbol;\n    uint256 private _totalSupply;\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    constructor (string memory name_, string memory symbol_, uint256 initialSupply) {\n        _name = name_;\n        _symbol = symbol_;\n        _owner = msg.sender;\n        mint(initialSupply);\n    }\n\n    receive() external payable {\n        require(msg.value > 0, \"not enough funds!\");\n        _balances[msg.sender] += msg.value;\n        emit Purchase(msg.sender, msg.value);\n    }\n\n    function sell(uint256 amount) external enoughTokens(msg.sender, amount) {\n        _balances[msg.sender] -= amount;\n        payable(msg.sender).transfer(amount);\n        emit Sale(msg.sender, amount);\n    }\n\n    modifier enoughTokens(address from, uint256 amount) {\n        require(balanceOf(from) >= amount, \"not enough tokens!\");\n        require(amount > 0, \"amount is zero!\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == _owner, \"not an owner!\");\n        _;\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n    \n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address to, uint256 amount) public enoughTokens(msg.sender, amount) {\n        _beforeTokenTransfer(msg.sender, to, amount);\n        _balances[msg.sender] -= amount;\n        _balances[to] += amount;\n        emit Transfer(msg.sender, to, amount);\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public {\n        _approve(msg.sender, spender, amount);\n    }\n\n    function _approve(address sender, address spender, uint256 amount) internal virtual {\n        _allowances[sender][spender] = amount;\n        emit Approve(sender, spender, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public enoughTokens(sender, amount) {\n        _beforeTokenTransfer(sender, recipient, amount);\n        require(_allowances[sender][msg.sender] >= amount, \"no allowance!\");\n        _allowances[sender][msg.sender] -= amount;\n\n        _balances[sender] -= amount;\n        _balances[recipient] += amount;\n        emit Transfer(sender, recipient, amount);\n    }\n\n    function mint(uint256 amount) public onlyOwner {\n        _beforeTokenTransfer(address(0), address(this), amount);\n        _balances[address(this)] += amount;\n        _totalSupply += amount;\n        emit Transfer(address(0), address(this), amount);\n    }\n\n    function burn(address from, uint256 amount) public onlyOwner enoughTokens(from, amount) {\n        require(_totalSupply - amount > 0, \"cannot be zero!\");\n        _beforeTokenTransfer(from, address(0), amount);\n        _balances[from] -= amount;\n        _totalSupply -= amount;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n",
  "sourceMap": "81:3426:0:-:0;;;356:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;446:5;:13;454:5;446;:13;:::i;:::-;-1:-1:-1;469:7:0;:17;479:7;469;:17;:::i;:::-;-1:-1:-1;496:6:0;:19;;-1:-1:-1;;;;;;496:19:0;505:10;496:19;;;525;530:13;525:4;:19::i;:::-;356:195;;;81:3426;;2868:253;1194:6;;-1:-1:-1;;;;;1194:6:0;1180:10;:20;1172:46;;;;-1:-1:-1;;;1172:46:0;;4410:2:2;1172:46:0;;;4392:21:2;4449:2;4429:18;;;4422:30;-1:-1:-1;;;4468:18:2;;;4461:43;4521:18;;1172:46:0;;;;;;;;3008:4:::1;2990:24;::::0;;;:9:::1;:24;::::0;;;;:34;;3018:6;;2990:24;:34:::1;::::0;3018:6;;2990:34:::1;:::i;:::-;;;;;;;;3050:6;3034:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3071:43:0::1;::::0;4923:25:2;;;3100:4:0::1;::::0;3088:1:::1;::::0;3071:43:::1;::::0;4911:2:2;4896:18;3071:43:0::1;;;;;;;2868:253:::0;:::o;3414:91::-;;;;:::o;14:127:2:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:2;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:2;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:2:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:2;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:2;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:2;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:2;;;4053:26;4004:89;-1:-1:-1;;2808:1:2;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:2;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:2;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:2;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:2:o;4550:222::-;4615:9;;;4636:10;;;4633:133;;;4688:10;4683:3;4679:20;4676:1;4669:31;4723:4;4720:1;4713:15;4751:4;4748:1;4741:15;4633:133;4550:222;;;;:::o;4777:177::-;81:3426:0;;;;;;",
  "sourcePath": "contracts/ERC20.sol",
  "type": "contract"
}