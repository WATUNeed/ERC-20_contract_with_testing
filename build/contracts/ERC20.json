{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC20.sol",
    "1": "contracts/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        428
      ],
      "IERC20": [
        506
      ]
    },
    "id": 429,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 507,
        "src": "57:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IERC20",
              "nameLocations": [
                "99:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 506,
              "src": "99:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "99:6:0"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 428,
        "linearizedBaseContracts": [
          428,
          506
        ],
        "name": "ERC20",
        "nameLocation": "90:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "128:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "112:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "112:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "155:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "140:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "140:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "181:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "166:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "166:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "210:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "194:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "265:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "228:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "237:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "228:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "248:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "338:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "280:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 21,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "289:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "280:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 20,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "300:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "320:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "436:115:0",
              "statements": [
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "446:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "454:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "446:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "446:13:0"
                },
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "469:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "479:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "469:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "469:17:0"
                },
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "496:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 40,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "505:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "509:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "505:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "496:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "496:19:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "530:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "525:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "525:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "525:19:0"
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "383:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "369:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "404:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "390:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "421:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "413:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "368:67:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:0"
            },
            "scope": 428,
            "src": "356:195:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "584:104:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "602:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "606:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "602:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "614:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "602:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682066756e647321",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "617:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d554845338db0190178b05eedccb58787f6ec0ebed540df185602e94e42610e2",
                          "typeString": "literal_string \"not enough funds!\""
                        },
                        "value": "not enough funds!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d554845338db0190178b05eedccb58787f6ec0ebed540df185602e94e42610e2",
                          "typeString": "literal_string \"not enough funds!\""
                        }
                      ],
                      "id": 52,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "594:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "594:43:0"
                },
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "647:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 63,
                      "indexExpression": {
                        "expression": {
                          "id": 61,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "657:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "661:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "657:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "647:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 64,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "672:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "676:5:0",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "672:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "647:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "647:34:0"
                }
              ]
            },
            "id": 69,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:0"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:0"
            },
            "scope": 428,
            "src": "557:131:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "766:94:0",
              "statements": [
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "776:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "expression": {
                          "id": 80,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "786:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "790:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "786:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "776:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 83,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "801:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "776:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "776:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "846:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "825:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "829:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "825:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "817:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 86,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "817:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "837:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "817:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "817:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "817:36:0"
                }
              ]
            },
            "functionSelector": "e4849b32",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 74,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "746:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "750:6:0",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "746:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 76,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "758:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 77,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73,
                  "name": "enoughTokens",
                  "nameLocations": [
                    "733:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 120,
                  "src": "733:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "733:32:0"
              }
            ],
            "name": "sell",
            "nameLocation": "703:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "716:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "708:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:16:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:0:0"
            },
            "scope": 428,
            "src": "694:166:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "918:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 104,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "946:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 103,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "936:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 106,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "955:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "936:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820746f6b656e7321",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "963:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df59bca08654599223eb81a79cbf0b926b9aafc4af0e1a864ce026645244aee",
                          "typeString": "literal_string \"not enough tokens!\""
                        },
                        "value": "not enough tokens!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df59bca08654599223eb81a79cbf0b926b9aafc4af0e1a864ce026645244aee",
                          "typeString": "literal_string \"not enough tokens!\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "928:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "928:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 112,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1002:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1011:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1002:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74206973207a65726f21",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1014:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d486b4b6633ba959c44790ff1bb154a0f57d45a0d437e7f168f19df068adca7b",
                          "typeString": "literal_string \"amount is zero!\""
                        },
                        "value": "amount is zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d486b4b6633ba959c44790ff1bb154a0f57d45a0d437e7f168f19df068adca7b",
                          "typeString": "literal_string \"amount is zero!\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "994:38:0"
                },
                {
                  "id": 118,
                  "nodeType": "PlaceholderStatement",
                  "src": "1042:1:0"
                }
              ]
            },
            "id": 120,
            "name": "enoughTokens",
            "nameLocation": "875:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "896:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "888:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "910:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "902:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:30:0"
            },
            "src": "866:184:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1077:74:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 123,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1095:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1099:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1095:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 125,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1109:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1095:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420616e206f776e657221",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1117:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15f6045e5864a5a6a9235deb0f530f5a98002e9ce1484dcdc1f92982a1f15fc8",
                          "typeString": "literal_string \"not an owner!\""
                        },
                        "value": "not an owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15f6045e5864a5a6a9235deb0f530f5a98002e9ce1484dcdc1f92982a1f15fc8",
                          "typeString": "literal_string \"not an owner!\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1087:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1087:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1087:46:0"
                },
                {
                  "id": 130,
                  "nodeType": "PlaceholderStatement",
                  "src": "1143:1:0"
                }
              ]
            },
            "id": 132,
            "name": "onlyOwner",
            "nameLocation": "1065:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1074:2:0"
            },
            "src": "1056:95:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              435
            ],
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1209:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 137,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "1226:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 136,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "1219:12:0"
                }
              ]
            },
            "functionSelector": "06fdde03",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1166:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1170:2:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1194:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1193:15:0"
            },
            "scope": 428,
            "src": "1157:81:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              440
            ],
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "1298:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 145,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "1315:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 146,
                  "nodeType": "Return",
                  "src": "1308:14:0"
                }
              ]
            },
            "functionSelector": "95d89b41",
            "id": 148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1253:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:2:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "1283:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:15:0"
            },
            "scope": 428,
            "src": "1244:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              445
            ],
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1387:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1404:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 152,
                  "id": 154,
                  "nodeType": "Return",
                  "src": "1397:9:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1348:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:0"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1380:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1379:7:0"
            },
            "scope": 428,
            "src": "1339:74:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              450
            ],
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "1472:36:0",
              "statements": [
                {
                  "expression": {
                    "id": 161,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "1489:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 160,
                  "id": 162,
                  "nodeType": "Return",
                  "src": "1482:19:0"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1428:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1439:2:0"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "1463:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:9:0"
            },
            "scope": 428,
            "src": "1419:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              457
            ],
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "1580:42:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 171,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1597:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 173,
                    "indexExpression": {
                      "id": 172,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "1607:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1597:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 170,
                  "id": 174,
                  "nodeType": "Return",
                  "src": "1590:25:0"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1523:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1541:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1533:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1532:17:0"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1571:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1570:9:0"
            },
            "scope": 428,
            "src": "1514:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              464
            ],
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "1714:182:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1745:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1749:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1745:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 191,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "1757:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 192,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1761:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 188,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "1724:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1724:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:44:0"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 195,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1778:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 198,
                      "indexExpression": {
                        "expression": {
                          "id": 196,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1788:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1792:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1788:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1778:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 199,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "1803:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1778:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:31:0"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 202,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1819:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 204,
                      "indexExpression": {
                        "id": 203,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "1829:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1819:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 205,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "1836:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1819:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1819:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1866:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1870:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1866:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 211,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "1878:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 212,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1882:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 208,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "1857:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1857:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "EmitStatement",
                  "src": "1852:37:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 216,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 183,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1694:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1698:6:0",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1694:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 185,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 180,
                    "src": "1706:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 186,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "enoughTokens",
                  "nameLocations": [
                    "1681:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 120,
                  "src": "1681:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1681:32:0"
              }
            ],
            "name": "transfer",
            "nameLocation": "1637:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1654:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "1646:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1666:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "1658:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1645:28:0"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1714:0:0"
            },
            "scope": 428,
            "src": "1628:268:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              473
            ],
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "1983:51:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 225,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2000:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 227,
                      "indexExpression": {
                        "id": 226,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "2012:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2000:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 229,
                    "indexExpression": {
                      "id": 228,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2019:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2000:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 224,
                  "id": 230,
                  "nodeType": "Return",
                  "src": "1993:34:0"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1911:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1929:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "1921:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1944:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "1936:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:32:0"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "1974:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:9:0"
            },
            "scope": 428,
            "src": "1902:132:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              480
            ],
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "2097:54:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 240,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2116:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2120:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2116:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 242,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "2128:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 243,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2137:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 239,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2107:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:37:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2049:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2065:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2057:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2082:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2074:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2056:33:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:0:0"
            },
            "scope": 428,
            "src": "2040:111:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2241:101:0",
              "statements": [
                {
                  "expression": {
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 256,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2251:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 259,
                        "indexExpression": {
                          "id": 257,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "2263:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2251:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 260,
                      "indexExpression": {
                        "id": 258,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "2271:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2251:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 261,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 253,
                      "src": "2282:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2251:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "2251:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 265,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "2311:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 266,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "2319:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 267,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "2328:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 264,
                      "name": "Approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "2303:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "2298:37:0"
                }
              ]
            },
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "2166:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2183:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2175:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2199:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2191:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2216:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "2208:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2174:49:0"
            },
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2241:0:0"
            },
            "scope": 428,
            "src": "2157:185:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              489
            ],
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "2457:320:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 285,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "2488:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 286,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "2496:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 287,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2507:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 284,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "2467:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 291,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "2532:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 293,
                            "indexExpression": {
                              "id": 292,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "2544:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2532:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 296,
                          "indexExpression": {
                            "expression": {
                              "id": 294,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2552:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2556:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2552:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2532:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 297,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 277,
                          "src": "2567:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2532:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20616c6c6f77616e636521",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2575:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_105f17d18441511e313a120538aeba623f4472b38a36ddd66c46b2dde6432141",
                          "typeString": "literal_string \"no allowance!\""
                        },
                        "value": "no allowance!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_105f17d18441511e313a120538aeba623f4472b38a36ddd66c46b2dde6432141",
                          "typeString": "literal_string \"no allowance!\""
                        }
                      ],
                      "id": 290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2524:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2524:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:67:0"
                },
                {
                  "expression": {
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 302,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2601:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 306,
                        "indexExpression": {
                          "id": 303,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "2613:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2601:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 307,
                      "indexExpression": {
                        "expression": {
                          "id": 304,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2621:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2625:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2621:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2601:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 308,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2636:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2601:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "2601:41:0"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 311,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2653:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 313,
                      "indexExpression": {
                        "id": 312,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "2663:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2653:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 314,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2674:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2653:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "2653:27:0"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 317,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2690:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 319,
                      "indexExpression": {
                        "id": 318,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "2700:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2690:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 320,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2714:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2690:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "2690:30:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 324,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "2744:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 325,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "2752:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 326,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2763:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 323,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "2735:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2735:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "EmitStatement",
                  "src": "2730:40:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 280,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 273,
                    "src": "2441:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 281,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 277,
                    "src": "2449:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 279,
                  "name": "enoughTokens",
                  "nameLocations": [
                    "2428:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 120,
                  "src": "2428:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2428:28:0"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "2357:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2378:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "2370:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2394:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "2386:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2413:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "2405:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2405:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2369:51:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:0:0"
            },
            "scope": 428,
            "src": "2348:429:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "2830:206:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2869:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2861:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 338,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2861:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2861:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 344,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2881:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$428",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$428",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2873:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 342,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2873:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2873:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 346,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "2888:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 337,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "2840:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:55:0"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 349,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2905:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 354,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 352,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2923:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$428",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$428",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2915:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 350,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2915:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2915:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2905:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 355,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "2933:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2905:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:34:0"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 358,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2949:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 359,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "2965:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2949:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "2949:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3003:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2995:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 363,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2995:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2995:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 369,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3015:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$428",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$428",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3007:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3007:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3007:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 371,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "3022:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 362,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "2986:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "EmitStatement",
                  "src": "2981:48:0"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 375,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 335,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 334,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2820:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "2820:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2820:9:0"
              }
            ],
            "name": "mint",
            "nameLocation": "2792:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2805:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "2797:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2796:16:0"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2830:0:0"
            },
            "scope": 428,
            "src": "2783:253:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "3130:193:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 389,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "3148:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 390,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 379,
                            "src": "3163:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3148:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3172:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3148:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74206265207a65726f21",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3175:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcbf14d21ff84c20110aa11d51b1b49ead4d8a823245d8c2c5adf27b4d98b8be",
                          "typeString": "literal_string \"cannot be zero!\""
                        },
                        "value": "cannot be zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcbf14d21ff84c20110aa11d51b1b49ead4d8a823245d8c2c5adf27b4d98b8be",
                          "typeString": "literal_string \"cannot be zero!\""
                        }
                      ],
                      "id": 388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3140:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "3140:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 398,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "3224:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3238:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3230:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3230:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3230:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 403,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "3242:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 397,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "3203:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3203:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "3203:46:0"
                },
                {
                  "expression": {
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 406,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3259:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 408,
                      "indexExpression": {
                        "id": 407,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "3269:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3259:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 409,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "3278:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3259:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:25:0"
                },
                {
                  "expression": {
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 412,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3294:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 413,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "3310:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3294:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "3294:22:0"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 382,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 381,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3093:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "3093:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3093:9:0"
              },
              {
                "arguments": [
                  {
                    "id": 384,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 377,
                    "src": "3116:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 385,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 379,
                    "src": "3122:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 386,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 383,
                  "name": "enoughTokens",
                  "nameLocations": [
                    "3103:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 120,
                  "src": "3103:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3103:26:0"
              }
            ],
            "name": "burn",
            "nameLocation": "3051:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3064:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3056:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3078:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3070:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3070:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3055:30:0"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3130:0:0"
            },
            "scope": 428,
            "src": "3042:281:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "3418:2:0",
              "statements": []
            },
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3338:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3367:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3359:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3381:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3373:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3393:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3385:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3385:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3358:42:0"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3418:0:0"
            },
            "scope": 428,
            "src": "3329:91:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 429,
        "src": "81:3341:0",
        "usedErrors": [],
        "usedEvents": [
          497,
          505
        ]
      }
    ],
    "src": "32:3391:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000f8938038062000f8983398101604081905262000034916200020d565b60016200004284826200030e565b5060026200005183826200030e565b50600080546001600160a01b031916331790556200006f8162000078565b50505062000402565b6000546001600160a01b03163314620000c75760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b604482015260640160405180910390fd5b3060009081526004602052604081208054839290620000e8908490620003da565b925050819055508060036000828254620001039190620003da565b909155505060405181815230906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017057600080fd5b81516001600160401b03808211156200018d576200018d62000148565b604051601f8301601f19908116603f01168101908282118183101715620001b857620001b862000148565b81604052838152602092508683858801011115620001d557600080fd5b600091505b83821015620001f95785820183015181830184015290820190620001da565b600093810190920192909252949350505050565b6000806000606084860312156200022357600080fd5b83516001600160401b03808211156200023b57600080fd5b62000249878388016200015e565b945060208601519150808211156200026057600080fd5b506200026f868287016200015e565b925050604084015190509250925092565b600181811c908216806200029557607f821691505b602082108103620002b657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014357600081815260208120601f850160051c81016020861015620002e55750805b601f850160051c820191505b818110156200030657828155600101620002f1565b505050505050565b81516001600160401b038111156200032a576200032a62000148565b62000342816200033b845462000280565b84620002bc565b602080601f8311600181146200037a5760008415620003615750858301515b600019600386901b1c1916600185901b17855562000306565b600085815260208120601f198616915b82811015620003ab578886015182559484019460019091019084016200038a565b5085821015620003ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003fc57634e487b7160e01b600052601160045260246000fd5b92915050565b610b7780620004126000396000f3fe6080604052600436106100ab5760003560e01c806395d89b411161006457806395d89b41146102035780639dc29fac14610218578063a0712d6814610238578063a9059cbb14610258578063dd62ed3e14610278578063e4849b321461029857600080fd5b806306fdde0314610125578063095ea7b31461015057806318160ddd1461017257806323b872dd14610191578063313ce567146101b157806370a08231146101cd57600080fd5b3661012057600034116100f95760405162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f7567682066756e64732160781b60448201526064015b60405180910390fd5b336000908152600460205260408120805434929061011890849061094e565b925050819055005b600080fd5b34801561013157600080fd5b5061013a6102b8565b6040516101479190610961565b60405180910390f35b34801561015c57600080fd5b5061017061016b3660046109cb565b61034a565b005b34801561017e57600080fd5b506003545b604051908152602001610147565b34801561019d57600080fd5b506101706101ac3660046109f5565b610359565b3480156101bd57600080fd5b5060405160128152602001610147565b3480156101d957600080fd5b506101836101e8366004610a31565b6001600160a01b031660009081526004602052604090205490565b34801561020f57600080fd5b5061013a610504565b34801561022457600080fd5b506101706102333660046109cb565b610513565b34801561024457600080fd5b50610170610253366004610a53565b610658565b34801561026457600080fd5b506101706102733660046109cb565b61071a565b34801561028457600080fd5b50610183610293366004610a6c565b610802565b3480156102a457600080fd5b506101706102b3366004610a53565b61082f565b6060600180546102c790610a9f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f390610a9f565b80156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b5050505050905090565b6103553383836108d7565b5050565b82818061037b836001600160a01b031660009081526004602052604090205490565b10156103995760405162461bcd60e51b81526004016100f090610ad9565b600081116103b95760405162461bcd60e51b81526004016100f090610b05565b6001600160a01b038516600090815260056020908152604080832033845290915290205483111561041c5760405162461bcd60e51b815260206004820152600d60248201526c6e6f20616c6c6f77616e63652160981b60448201526064016100f0565b6001600160a01b03851660009081526005602090815260408083203384529091528120805485929061044f908490610b2e565b90915550506001600160a01b0385166000908152600460205260408120805485929061047c908490610b2e565b90915550506001600160a01b038416600090815260046020526040812080548592906104a990849061094e565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516104f591815260200190565b60405180910390a35050505050565b6060600280546102c790610a9f565b6000546001600160a01b0316331461055d5760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b60448201526064016100f0565b81818061057f836001600160a01b031660009081526004602052604090205490565b101561059d5760405162461bcd60e51b81526004016100f090610ad9565b600081116105bd5760405162461bcd60e51b81526004016100f090610b05565b6000836003546105cd9190610b2e565b1161060c5760405162461bcd60e51b815260206004820152600f60248201526e63616e6e6f74206265207a65726f2160881b60448201526064016100f0565b6001600160a01b03841660009081526004602052604081208054859290610634908490610b2e565b92505081905550826003600082825461064d9190610b2e565b909155505050505050565b6000546001600160a01b031633146106a25760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b60448201526064016100f0565b30600090815260046020526040812080548392906106c190849061094e565b9250508190555080600360008282546106da919061094e565b909155505060405181815230906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b33600081815260046020526040902054829081111561074b5760405162461bcd60e51b81526004016100f090610ad9565b6000811161076b5760405162461bcd60e51b81526004016100f090610b05565b336000908152600460205260408120805485929061078a908490610b2e565b90915550506001600160a01b038416600090815260046020526040812080548592906107b790849061094e565b90915550506040518381526001600160a01b0385169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b6001600160a01b038083166000908152600560209081526040808320938516835292905220545b92915050565b3360008181526004602052604090205482908111156108605760405162461bcd60e51b81526004016100f090610ad9565b600081116108805760405162461bcd60e51b81526004016100f090610b05565b336000908152600460205260408120805485929061089f908490610b2e565b9091555050604051339084156108fc029085906000818181858888f193505050501580156108d1573d6000803e3d6000fd5b50505050565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f6e11fb1b7f119e3f2fa29896ef5fdf8b8a2d0d4df6fe90ba8668e7d8b2ffa25e910160405180910390a3505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561082957610829610938565b600060208083528351808285015260005b8181101561098e57858101830151858201604001528201610972565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109c657600080fd5b919050565b600080604083850312156109de57600080fd5b6109e7836109af565b946020939093013593505050565b600080600060608486031215610a0a57600080fd5b610a13846109af565b9250610a21602085016109af565b9150604084013590509250925092565b600060208284031215610a4357600080fd5b610a4c826109af565b9392505050565b600060208284031215610a6557600080fd5b5035919050565b60008060408385031215610a7f57600080fd5b610a88836109af565b9150610a96602084016109af565b90509250929050565b600181811c90821680610ab357607f821691505b602082108103610ad357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601290820152716e6f7420656e6f75676820746f6b656e732160701b604082015260600190565b6020808252600f908201526e616d6f756e74206973207a65726f2160881b604082015260600190565b818103818111156108295761082961093856fea26469706673582212208fc431b20ca4790a8997620baf0f800edb3c1224f9c22179d51236bd50a8191064736f6c63430008150033",
  "bytecodeSha1": "d39601403d5504624c539fd2a80fbb983181c548",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20.<receive>": {
          "27": [
            602,
            615,
            true
          ]
        },
        "ERC20.burn": {
          "29": [
            3148,
            3173,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            2532,
            2573,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "ERC20.<receive>": {
          "0": [
            594,
            637
          ],
          "1": [
            647,
            681
          ]
        },
        "ERC20._approve": {
          "25": [
            2251,
            2288
          ],
          "26": [
            2298,
            2335
          ]
        },
        "ERC20.allowance": {
          "22": [
            1993,
            2027
          ]
        },
        "ERC20.approve": {
          "6": [
            2107,
            2144
          ]
        },
        "ERC20.balanceOf": {
          "4": [
            1590,
            1615
          ]
        },
        "ERC20.burn": {
          "13": [
            3140,
            3193
          ],
          "14": [
            3259,
            3284
          ],
          "15": [
            3294,
            3316
          ]
        },
        "ERC20.decimals": {
          "3": [
            1397,
            1406
          ]
        },
        "ERC20.mint": {
          "16": [
            2905,
            2939
          ],
          "17": [
            2949,
            2971
          ],
          "18": [
            2981,
            3029
          ]
        },
        "ERC20.name": {
          "5": [
            1219,
            1231
          ]
        },
        "ERC20.sell": {
          "23": [
            776,
            807
          ],
          "24": [
            817,
            853
          ]
        },
        "ERC20.symbol": {
          "12": [
            1308,
            1322
          ]
        },
        "ERC20.totalSupply": {
          "2": [
            1482,
            1501
          ]
        },
        "ERC20.transfer": {
          "19": [
            1778,
            1809
          ],
          "20": [
            1819,
            1842
          ],
          "21": [
            1852,
            1889
          ]
        },
        "ERC20.transferFrom": {
          "7": [
            2524,
            2591
          ],
          "8": [
            2601,
            2642
          ],
          "9": [
            2653,
            2680
          ],
          "10": [
            2690,
            2720
          ],
          "11": [
            2730,
            2770
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "6080604052600436106100ab5760003560e01c806395d89b411161006457806395d89b41146102035780639dc29fac14610218578063a0712d6814610238578063a9059cbb14610258578063dd62ed3e14610278578063e4849b321461029857600080fd5b806306fdde0314610125578063095ea7b31461015057806318160ddd1461017257806323b872dd14610191578063313ce567146101b157806370a08231146101cd57600080fd5b3661012057600034116100f95760405162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f7567682066756e64732160781b60448201526064015b60405180910390fd5b336000908152600460205260408120805434929061011890849061094e565b925050819055005b600080fd5b34801561013157600080fd5b5061013a6102b8565b6040516101479190610961565b60405180910390f35b34801561015c57600080fd5b5061017061016b3660046109cb565b61034a565b005b34801561017e57600080fd5b506003545b604051908152602001610147565b34801561019d57600080fd5b506101706101ac3660046109f5565b610359565b3480156101bd57600080fd5b5060405160128152602001610147565b3480156101d957600080fd5b506101836101e8366004610a31565b6001600160a01b031660009081526004602052604090205490565b34801561020f57600080fd5b5061013a610504565b34801561022457600080fd5b506101706102333660046109cb565b610513565b34801561024457600080fd5b50610170610253366004610a53565b610658565b34801561026457600080fd5b506101706102733660046109cb565b61071a565b34801561028457600080fd5b50610183610293366004610a6c565b610802565b3480156102a457600080fd5b506101706102b3366004610a53565b61082f565b6060600180546102c790610a9f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f390610a9f565b80156103405780601f1061031557610100808354040283529160200191610340565b820191906000526020600020905b81548152906001019060200180831161032357829003601f168201915b5050505050905090565b6103553383836108d7565b5050565b82818061037b836001600160a01b031660009081526004602052604090205490565b10156103995760405162461bcd60e51b81526004016100f090610ad9565b600081116103b95760405162461bcd60e51b81526004016100f090610b05565b6001600160a01b038516600090815260056020908152604080832033845290915290205483111561041c5760405162461bcd60e51b815260206004820152600d60248201526c6e6f20616c6c6f77616e63652160981b60448201526064016100f0565b6001600160a01b03851660009081526005602090815260408083203384529091528120805485929061044f908490610b2e565b90915550506001600160a01b0385166000908152600460205260408120805485929061047c908490610b2e565b90915550506001600160a01b038416600090815260046020526040812080548592906104a990849061094e565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516104f591815260200190565b60405180910390a35050505050565b6060600280546102c790610a9f565b6000546001600160a01b0316331461055d5760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b60448201526064016100f0565b81818061057f836001600160a01b031660009081526004602052604090205490565b101561059d5760405162461bcd60e51b81526004016100f090610ad9565b600081116105bd5760405162461bcd60e51b81526004016100f090610b05565b6000836003546105cd9190610b2e565b1161060c5760405162461bcd60e51b815260206004820152600f60248201526e63616e6e6f74206265207a65726f2160881b60448201526064016100f0565b6001600160a01b03841660009081526004602052604081208054859290610634908490610b2e565b92505081905550826003600082825461064d9190610b2e565b909155505050505050565b6000546001600160a01b031633146106a25760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b60448201526064016100f0565b30600090815260046020526040812080548392906106c190849061094e565b9250508190555080600360008282546106da919061094e565b909155505060405181815230906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350565b33600081815260046020526040902054829081111561074b5760405162461bcd60e51b81526004016100f090610ad9565b6000811161076b5760405162461bcd60e51b81526004016100f090610b05565b336000908152600460205260408120805485929061078a908490610b2e565b90915550506001600160a01b038416600090815260046020526040812080548592906107b790849061094e565b90915550506040518381526001600160a01b0385169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b6001600160a01b038083166000908152600560209081526040808320938516835292905220545b92915050565b3360008181526004602052604090205482908111156108605760405162461bcd60e51b81526004016100f090610ad9565b600081116108805760405162461bcd60e51b81526004016100f090610b05565b336000908152600460205260408120805485929061089f908490610b2e565b9091555050604051339084156108fc029085906000818181858888f193505050501580156108d1573d6000803e3d6000fd5b50505050565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f6e11fb1b7f119e3f2fa29896ef5fdf8b8a2d0d4df6fe90ba8668e7d8b2ffa25e910160405180910390a3505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561082957610829610938565b600060208083528351808285015260005b8181101561098e57858101830151858201604001528201610972565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109c657600080fd5b919050565b600080604083850312156109de57600080fd5b6109e7836109af565b946020939093013593505050565b600080600060608486031215610a0a57600080fd5b610a13846109af565b9250610a21602085016109af565b9150604084013590509250925092565b600060208284031215610a4357600080fd5b610a4c826109af565b9392505050565b600060208284031215610a6557600080fd5b5035919050565b60008060408385031215610a7f57600080fd5b610a88836109af565b9150610a96602084016109af565b90509250929050565b600181811c90821680610ab357607f821691505b602082108103610ad357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601290820152716e6f7420656e6f75676820746f6b656e732160701b604082015260600190565b6020808252600f908201526e616d6f756e74206973207a65726f2160881b604082015260600190565b818103818111156108295761082961093856fea26469706673582212208fc431b20ca4790a8997620baf0f800edb3c1224f9c22179d51236bd50a8191064736f6c63430008150033",
  "deployedSourceMap": "81:3341:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:1;602:9;:13;594:43;;;;-1:-1:-1;;;594:43:0;;216:2:2;594:43:0;;;198:21:2;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:2;;;267:47;331:18;;594:43:0;;;;;;;;;657:10;647:21;;;;:9;:21;;;;;:34;;672:9;;647:21;:34;;672:9;;647:34;:::i;:::-;;;;;;;;81:3341;;;;1157:81;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2040:111;;;;;;;;;;-1:-1:-1;2040:111:0;;;;;:::i;:::-;;:::i;:::-;;1419:89;;;;;;;;;;-1:-1:-1;1489:12:0;;1419:89;;;1758:25:2;;;1746:2;1731:18;1419:89:0;1612:177:2;2348:429:0;;;;;;;;;;-1:-1:-1;2348:429:0;;;;;:::i;:::-;;:::i;1339:74::-;;;;;;;;;;-1:-1:-1;1339:74:0;;1404:2;2269:36:2;;2257:2;2242:18;1339:74:0;2127:184:2;1514:108:0;;;;;;;;;;-1:-1:-1;1514:108:0;;;;;:::i;:::-;-1:-1:-1;;;;;1597:18:0;1571:7;1597:18;;;:9;:18;;;;;;;1514:108;1244:85;;;;;;;;;;;;;:::i;3042:281::-;;;;;;;;;;-1:-1:-1;3042:281:0;;;;;:::i;:::-;;:::i;2783:253::-;;;;;;;;;;-1:-1:-1;2783:253:0;;;;;:::i;:::-;;:::i;1628:268::-;;;;;;;;;;-1:-1:-1;1628:268:0;;;;;:::i;:::-;;:::i;1902:132::-;;;;;;;;;;-1:-1:-1;1902:132:0;;;;;:::i;:::-;;:::i;694:166::-;;;;;;;;;;-1:-1:-1;694:166:0;;;;;:::i;:::-;;:::i;1157:81::-;1194:13;1226:5;1219:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:81;:::o;2040:111::-;2107:37;2116:10;2128:7;2137:6;2107:8;:37::i;:::-;2040:111;;:::o;2348:429::-;2441:6;2449;955;936:15;946:4;-1:-1:-1;;;;;1597:18:0;1571:7;1597:18;;;:9;:18;;;;;;;1514:108;936:15;:25;;928:56;;;;-1:-1:-1;;;928:56:0;;;;;;;:::i;:::-;1011:1;1002:6;:10;994:38;;;;-1:-1:-1;;;994:38:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2532:19:0;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;2552:10:::1;2532:31:::0;;;;;;;;:41;-1:-1:-1;2532:41:0::1;2524:67;;;::::0;-1:-1:-1;;;2524:67:0;;4235:2:2;2524:67:0::1;::::0;::::1;4217:21:2::0;4274:2;4254:18;;;4247:30;-1:-1:-1;;;4293:18:2;;;4286:43;4346:18;;2524:67:0::1;4033:337:2::0;2524:67:0::1;-1:-1:-1::0;;;;;2601:19:0;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;2621:10:::1;2601:31:::0;;;;;;;:41;;2636:6;;2601:19;:41:::1;::::0;2636:6;;2601:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;2653:17:0;::::1;;::::0;;;:9:::1;:17;::::0;;;;:27;;2674:6;;2653:17;:27:::1;::::0;2674:6;;2653:27:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;2690:20:0;::::1;;::::0;;;:9:::1;:20;::::0;;;;:30;;2714:6;;2690:20;:30:::1;::::0;2714:6;;2690:30:::1;:::i;:::-;;;;;;;;2752:9;-1:-1:-1::0;;;;;2735:35:0::1;2744:6;-1:-1:-1::0;;;;;2735:35:0::1;;2763:6;2735:35;;;;1758:25:2::0;;1746:2;1731:18;;1612:177;2735:35:0::1;;;;;;;;2348:429:::0;;;;;:::o;1244:85::-;1283:13;1315:7;1308:14;;;;;:::i;3042:281::-;1109:6;;-1:-1:-1;;;;;1109:6:0;1095:10;:20;1087:46;;;;-1:-1:-1;;;1087:46:0;;4710:2:2;1087:46:0;;;4692:21:2;4749:2;4729:18;;;4722:30;-1:-1:-1;;;4768:18:2;;;4761:43;4821:18;;1087:46:0;4508:337:2;1087:46:0;3116:4:::1;3122:6;955;936:15;946:4;-1:-1:-1::0;;;;;1597:18:0;1571:7;1597:18;;;:9;:18;;;;;;;1514:108;936:15:::1;:25;;928:56;;;;-1:-1:-1::0;;;928:56:0::1;;;;;;;:::i;:::-;1011:1;1002:6;:10;994:38;;;;-1:-1:-1::0;;;994:38:0::1;;;;;;;:::i;:::-;3172:1:::2;3163:6;3148:12;;:21;;;;:::i;:::-;:25;3140:53;;;::::0;-1:-1:-1;;;3140:53:0;;5052:2:2;3140:53:0::2;::::0;::::2;5034:21:2::0;5091:2;5071:18;;;5064:30;-1:-1:-1;;;5110:18:2;;;5103:45;5165:18;;3140:53:0::2;4850:339:2::0;3140:53:0::2;-1:-1:-1::0;;;;;3259:15:0;::::2;;::::0;;;:9:::2;:15;::::0;;;;:25;;3278:6;;3259:15;:25:::2;::::0;3278:6;;3259:25:::2;:::i;:::-;;;;;;;;3310:6;3294:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;3042:281:0:o;2783:253::-;1109:6;;-1:-1:-1;;;;;1109:6:0;1095:10;:20;1087:46;;;;-1:-1:-1;;;1087:46:0;;4710:2:2;1087:46:0;;;4692:21:2;4749:2;4729:18;;;4722:30;-1:-1:-1;;;4768:18:2;;;4761:43;4821:18;;1087:46:0;4508:337:2;1087:46:0;2923:4:::1;2905:24;::::0;;;:9:::1;:24;::::0;;;;:34;;2933:6;;2905:24;:34:::1;::::0;2933:6;;2905:34:::1;:::i;:::-;;;;;;;;2965:6;2949:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2986:43:0::1;::::0;1758:25:2;;;3015:4:0::1;::::0;3003:1:::1;::::0;2986:43:::1;::::0;1746:2:2;1731:18;2986:43:0::1;;;;;;;2783:253:::0;:::o;1628:268::-;1694:10;1571:7;1597:18;;;:9;:18;;;;;;1706:6;;;-1:-1:-1;936:25:0;928:56;;;;-1:-1:-1;;;928:56:0;;;;;;;:::i;:::-;1011:1;1002:6;:10;994:38;;;;-1:-1:-1;;;994:38:0;;;;;;;:::i;:::-;1788:10:::1;1778:21;::::0;;;:9:::1;:21;::::0;;;;:31;;1803:6;;1778:21;:31:::1;::::0;1803:6;;1778:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;1819:13:0;::::1;;::::0;;;:9:::1;:13;::::0;;;;:23;;1836:6;;1819:13;:23:::1;::::0;1836:6;;1819:23:::1;:::i;:::-;::::0;;;-1:-1:-1;;1857:32:0::1;::::0;1758:25:2;;;-1:-1:-1;;;;;1857:32:0;::::1;::::0;1866:10:::1;::::0;1857:32:::1;::::0;1746:2:2;1731:18;1857:32:0::1;;;;;;;1628:268:::0;;;;:::o;1902:132::-;-1:-1:-1;;;;;2000:18:0;;;1974:7;2000:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;1902:132;;;;;:::o;694:166::-;746:10;1571:7;1597:18;;;:9;:18;;;;;;758:6;;;-1:-1:-1;936:25:0;928:56;;;;-1:-1:-1;;;928:56:0;;;;;;;:::i;:::-;1011:1;1002:6;:10;994:38;;;;-1:-1:-1;;;994:38:0;;;;;;;:::i;:::-;786:10:::1;776:21;::::0;;;:9:::1;:21;::::0;;;;:31;;801:6;;776:21;:31:::1;::::0;801:6;;776:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;817:36:0::1;::::0;825:10:::1;::::0;817:36;::::1;;;::::0;846:6;;817:36:::1;::::0;;;846:6;825:10;817:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;694:166:::0;;;:::o;2157:185::-;-1:-1:-1;;;;;2251:19:0;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:37;;;2303:32;;1758:25:2;;;2303:32:0;;1731:18:2;2303:32:0;;;;;;;2157:185;;;:::o;360:127:2:-;421:10;416:3;412:20;409:1;402:31;452:4;449:1;442:15;476:4;473:1;466:15;492:125;557:9;;;578:10;;;575:36;;;591:18;;:::i;622:548::-;734:4;763:2;792;781:9;774:21;824:6;818:13;867:6;862:2;851:9;847:18;840:34;892:1;902:140;916:6;913:1;910:13;902:140;;;1011:14;;;1007:23;;1001:30;977:17;;;996:2;973:26;966:66;931:10;;902:140;;;906:3;1091:1;1086:2;1077:6;1066:9;1062:22;1058:31;1051:42;1161:2;1154;1150:7;1145:2;1137:6;1133:15;1129:29;1118:9;1114:45;1110:54;1102:62;;;;622:548;;;;:::o;1175:173::-;1243:20;;-1:-1:-1;;;;;1292:31:2;;1282:42;;1272:70;;1338:1;1335;1328:12;1272:70;1175:173;;;:::o;1353:254::-;1421:6;1429;1482:2;1470:9;1461:7;1457:23;1453:32;1450:52;;;1498:1;1495;1488:12;1450:52;1521:29;1540:9;1521:29;:::i;:::-;1511:39;1597:2;1582:18;;;;1569:32;;-1:-1:-1;;;1353:254:2:o;1794:328::-;1871:6;1879;1887;1940:2;1928:9;1919:7;1915:23;1911:32;1908:52;;;1956:1;1953;1946:12;1908:52;1979:29;1998:9;1979:29;:::i;:::-;1969:39;;2027:38;2061:2;2050:9;2046:18;2027:38;:::i;:::-;2017:48;;2112:2;2101:9;2097:18;2084:32;2074:42;;1794:328;;;;;:::o;2316:186::-;2375:6;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;2316:186;-1:-1:-1;;;2316:186:2:o;2507:180::-;2566:6;2619:2;2607:9;2598:7;2594:23;2590:32;2587:52;;;2635:1;2632;2625:12;2587:52;-1:-1:-1;2658:23:2;;2507:180;-1:-1:-1;2507:180:2:o;2692:260::-;2760:6;2768;2821:2;2809:9;2800:7;2796:23;2792:32;2789:52;;;2837:1;2834;2827:12;2789:52;2860:29;2879:9;2860:29;:::i;:::-;2850:39;;2908:38;2942:2;2931:9;2927:18;2908:38;:::i;:::-;2898:48;;2692:260;;;;;:::o;2957:380::-;3036:1;3032:12;;;;3079;;;3100:61;;3154:4;3146:6;3142:17;3132:27;;3100:61;3207:2;3199:6;3196:14;3176:18;3173:38;3170:161;;3253:10;3248:3;3244:20;3241:1;3234:31;3288:4;3285:1;3278:15;3316:4;3313:1;3306:15;3170:161;;2957:380;;;:::o;3342:342::-;3544:2;3526:21;;;3583:2;3563:18;;;3556:30;-1:-1:-1;;;3617:2:2;3602:18;;3595:48;3675:2;3660:18;;3342:342::o;3689:339::-;3891:2;3873:21;;;3930:2;3910:18;;;3903:30;-1:-1:-1;;;3964:2:2;3949:18;;3942:45;4019:2;4004:18;;3689:339::o;4375:128::-;4442:9;;;4463:11;;;4460:37;;;4477:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    81,
    3422
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x120 JUMPI PUSH1 0x0 CALLVALUE GT PUSH2 0xF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x6E6F7420656E6F7567682066756E647321 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x118 SWAP1 DUP5 SWAP1 PUSH2 0x94E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x147 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x147 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x504 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2C7 SWAP1 PUSH2 0xA9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F3 SWAP1 PUSH2 0xA9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x340 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x315 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x340 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x323 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x355 CALLER DUP4 DUP4 PUSH2 0x8D7 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP2 DUP1 PUSH2 0x37B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6E6F20616C6C6F77616E636521 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x44F SWAP1 DUP5 SWAP1 PUSH2 0xB2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x47C SWAP1 DUP5 SWAP1 PUSH2 0xB2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x4A9 SWAP1 DUP5 SWAP1 PUSH2 0x94E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2C7 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6E6F7420616E206F776E657221 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF0 JUMP JUMPDEST DUP2 DUP2 DUP1 PUSH2 0x57F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x3 SLOAD PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST GT PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x63616E6E6F74206265207A65726F21 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x634 SWAP1 DUP5 SWAP1 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6E6F7420616E206F776E657221 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF0 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6C1 SWAP1 DUP5 SWAP1 PUSH2 0x94E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x94E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 DUP2 GT ISZERO PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x76B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB05 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x78A SWAP1 DUP5 SWAP1 PUSH2 0xB2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x7B7 SWAP1 DUP5 SWAP1 PUSH2 0x94E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 DUP2 GT ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0 SWAP1 PUSH2 0xB05 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x89F SWAP1 DUP5 SWAP1 PUSH2 0xB2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x6E11FB1B7F119E3F2FA29896EF5FDF8B8A2D0D4DF6FE90BA8668E7D8B2FFA25E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x829 JUMPI PUSH2 0x829 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x98E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x972 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E7 DUP4 PUSH2 0x9AF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA13 DUP5 PUSH2 0x9AF JUMP JUMPDEST SWAP3 POP PUSH2 0xA21 PUSH1 0x20 DUP6 ADD PUSH2 0x9AF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA4C DUP3 PUSH2 0x9AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA88 DUP4 PUSH2 0x9AF JUMP JUMPDEST SWAP2 POP PUSH2 0xA96 PUSH1 0x20 DUP5 ADD PUSH2 0x9AF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAD3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x6E6F7420656E6F75676820746F6B656E7321 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x616D6F756E74206973207A65726F21 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x829 JUMPI PUSH2 0x829 PUSH2 0x938 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xC4 BALANCE 0xB2 0xC LOG4 PUSH26 0xA8997620BAF0F800EDB3C1224F9C22179D51236BD50A8191064 PUSH20 0x6F6C634300081500330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        81,
        3422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "12": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "25": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "36": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x203"
    },
    "40": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9DC29FAC"
    },
    "47": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218"
    },
    "51": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA0712D68"
    },
    "58": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238"
    },
    "62": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "69": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x258"
    },
    "73": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "80": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278"
    },
    "84": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE4849B32"
    },
    "91": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x298"
    },
    "95": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "REVERT",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "107": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125"
    },
    "111": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "118": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x150"
    },
    "122": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "129": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "133": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "140": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x191"
    },
    "144": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "151": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "155": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "162": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CD"
    },
    "166": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "REVERT",
      "path": "0"
    },
    "171": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "176": {
      "fn": null,
      "offset": [
        81,
        3422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "177": {
      "fn": "ERC20.<receive>",
      "offset": [
        614,
        615
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "179": {
      "fn": "ERC20.<receive>",
      "offset": [
        602,
        611
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "180": {
      "branch": 27,
      "fn": "ERC20.<receive>",
      "offset": [
        602,
        615
      ],
      "op": "GT",
      "path": "0"
    },
    "181": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "184": {
      "branch": 27,
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "187": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "194": {
      "op": "SHL"
    },
    "195": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "196": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "199": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "201": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "DUP3",
      "path": "0"
    },
    "202": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "ADD",
      "path": "0"
    },
    "203": {
      "op": "MSTORE"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "208": {
      "op": "DUP3"
    },
    "209": {
      "op": "ADD"
    },
    "210": {
      "op": "MSTORE"
    },
    "211": {
      "op": "PUSH17",
      "value": "0x6E6F7420656E6F7567682066756E647321"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "231": {
      "op": "SHL"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "234": {
      "op": "DUP3"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "op": "MSTORE"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "239": {
      "op": "ADD"
    },
    "240": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "243": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "244": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "DUP1",
      "path": "0"
    },
    "245": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "246": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "SUB",
      "path": "0"
    },
    "247": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "248": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "249": {
      "fn": "ERC20.<receive>",
      "offset": [
        594,
        637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "ERC20.<receive>",
      "offset": [
        657,
        667
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "251": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "253": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "254": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "255": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "256": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "258": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "260": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "261": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "264": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "265": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "DUP1",
      "path": "0"
    },
    "266": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "267": {
      "fn": "ERC20.<receive>",
      "offset": [
        672,
        681
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "268": {
      "fn": "ERC20.<receive>",
      "offset": [
        672,
        681
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "269": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "270": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "273": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "fn": "ERC20.<receive>",
      "offset": [
        672,
        681
      ],
      "op": "DUP5",
      "path": "0"
    },
    "275": {
      "fn": "ERC20.<receive>",
      "offset": [
        672,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "276": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94E"
    },
    "279": {
      "fn": "ERC20.<receive>",
      "jump": "i",
      "offset": [
        647,
        681
      ],
      "op": "JUMP",
      "path": "0"
    },
    "280": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "281": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "282": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "POP",
      "path": "0"
    },
    "283": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "POP",
      "path": "0"
    },
    "284": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "285": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "286": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "287": {
      "fn": "ERC20.<receive>",
      "offset": [
        647,
        681
      ],
      "op": "STOP",
      "path": "0"
    },
    "288": {
      "offset": [
        81,
        3422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "fn": "ERC20.<receive>",
      "offset": [
        81,
        3422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "291": {
      "fn": "ERC20.<receive>",
      "offset": [
        81,
        3422
      ],
      "op": "DUP1",
      "path": "0"
    },
    "292": {
      "first_revert": true,
      "fn": "ERC20.<receive>",
      "offset": [
        81,
        3422
      ],
      "op": "REVERT",
      "path": "0"
    },
    "293": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "294": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "295": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "DUP1",
      "path": "0"
    },
    "296": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "297": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "300": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "301": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "303": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "DUP1",
      "path": "0"
    },
    "304": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "REVERT",
      "path": "0"
    },
    "305": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "POP",
      "path": "0"
    },
    "307": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "310": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "313": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMP",
      "path": "0"
    },
    "314": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "315": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "317": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "318": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "321": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "322": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "323": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x961"
    },
    "326": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMP",
      "path": "0"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "330": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "DUP1",
      "path": "0"
    },
    "332": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "333": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "SUB",
      "path": "0"
    },
    "334": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "RETURN",
      "path": "0"
    },
    "336": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "337": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "338": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "DUP1",
      "path": "0"
    },
    "339": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "340": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "343": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "344": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "346": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "DUP1",
      "path": "0"
    },
    "347": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "REVERT",
      "path": "0"
    },
    "348": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "op": "POP"
    },
    "350": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "353": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B"
    },
    "356": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "357": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "359": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CB"
    },
    "362": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "363": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "364": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34A"
    },
    "367": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "368": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "STOP",
      "path": "0"
    },
    "370": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "371": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "372": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "DUP1",
      "path": "0"
    },
    "373": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "374": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "377": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "378": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "380": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "DUP1",
      "path": "0"
    },
    "381": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "REVERT",
      "path": "0"
    },
    "382": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "383": {
      "op": "POP"
    },
    "384": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1489,
        1501
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x3"
    },
    "386": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1489,
        1501
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "387": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "390": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "DUP2"
    },
    "393": {
      "op": "MSTORE"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "396": {
      "op": "ADD"
    },
    "397": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1419,
        1508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "400": {
      "op": "JUMP"
    },
    "401": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "403": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "404": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "405": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "408": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "409": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "411": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "412": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "REVERT",
      "path": "0"
    },
    "413": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "op": "POP"
    },
    "415": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "418": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "421": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "422": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "424": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F5"
    },
    "427": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2348,
        2777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "428": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "432": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2348,
        2777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "433": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "434": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "435": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "436": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "437": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD"
    },
    "440": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "441": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "443": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "444": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "REVERT",
      "path": "0"
    },
    "445": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "446": {
      "op": "POP"
    },
    "447": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "449": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "450": {
      "fn": "ERC20.decimals",
      "offset": [
        1404,
        1406
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x12"
    },
    "452": {
      "op": "DUP2"
    },
    "453": {
      "op": "MSTORE"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "456": {
      "op": "ADD"
    },
    "457": {
      "fn": "ERC20.decimals",
      "offset": [
        1339,
        1413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "460": {
      "op": "JUMP"
    },
    "461": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "462": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "463": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "464": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "465": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "468": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "469": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "471": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "472": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "REVERT",
      "path": "0"
    },
    "473": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "op": "POP"
    },
    "475": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "478": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E8"
    },
    "481": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "482": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "484": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA31"
    },
    "487": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1514,
        1622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "488": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "op": "SUB"
    },
    "497": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "AND",
      "path": "0",
      "statement": 4
    },
    "498": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1571,
        1578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "500": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "501": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "502": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "503": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "505": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "507": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "508": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "510": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "511": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "512": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "513": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "514": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "515": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "516": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "517": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "DUP1",
      "path": "0"
    },
    "518": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "519": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F"
    },
    "522": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "523": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "525": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "DUP1",
      "path": "0"
    },
    "526": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "REVERT",
      "path": "0"
    },
    "527": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "528": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "POP",
      "path": "0"
    },
    "529": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "532": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "535": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        1244,
        1329
      ],
      "op": "JUMP",
      "path": "0"
    },
    "536": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "537": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "538": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "539": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "540": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224"
    },
    "543": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "544": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "546": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "547": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "REVERT",
      "path": "0"
    },
    "548": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "553": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x233"
    },
    "556": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "557": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "559": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CB"
    },
    "562": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3042,
        3323
      ],
      "op": "JUMP",
      "path": "0"
    },
    "563": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "564": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x513"
    },
    "567": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3042,
        3323
      ],
      "op": "JUMP",
      "path": "0"
    },
    "568": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "569": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "570": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "DUP1",
      "path": "0"
    },
    "571": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "572": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "575": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "576": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "578": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "DUP1",
      "path": "0"
    },
    "579": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "REVERT",
      "path": "0"
    },
    "580": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "585": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x253"
    },
    "588": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "591": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA53"
    },
    "594": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2783,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "595": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "596": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x658"
    },
    "599": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2783,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "601": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "602": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "DUP1",
      "path": "0"
    },
    "603": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "604": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x264"
    },
    "607": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "608": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "610": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "DUP1",
      "path": "0"
    },
    "611": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "REVERT",
      "path": "0"
    },
    "612": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "613": {
      "op": "POP"
    },
    "614": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "617": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x273"
    },
    "620": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "621": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "623": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CB"
    },
    "626": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1628,
        1896
      ],
      "op": "JUMP",
      "path": "0"
    },
    "627": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71A"
    },
    "631": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1628,
        1896
      ],
      "op": "JUMP",
      "path": "0"
    },
    "632": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "633": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "634": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "635": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "636": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "639": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "640": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "642": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "643": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "REVERT",
      "path": "0"
    },
    "644": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "649": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x293"
    },
    "652": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "653": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "655": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6C"
    },
    "658": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "659": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "660": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x802"
    },
    "663": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "664": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "665": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "666": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "667": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "668": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A4"
    },
    "671": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "672": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "674": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "675": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "REVERT",
      "path": "0"
    },
    "676": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "677": {
      "op": "POP"
    },
    "678": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "681": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3"
    },
    "684": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "685": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "687": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA53"
    },
    "690": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        694,
        860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "691": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "692": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82F"
    },
    "695": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        694,
        860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "696": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "ERC20.name",
      "offset": [
        1194,
        1207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "699": {
      "fn": "ERC20.name",
      "offset": [
        1226,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x1"
    },
    "701": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "702": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "703": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C7"
    },
    "706": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "707": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "710": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMP",
      "path": "0"
    },
    "711": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "712": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "713": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "715": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "716": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "718": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "719": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "720": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DIV",
      "path": "0"
    },
    "721": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "MUL",
      "path": "0"
    },
    "722": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "724": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "725": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "727": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "728": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "729": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP2",
      "path": "0"
    },
    "730": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "731": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "733": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "734": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "735": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "736": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "737": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP2",
      "path": "0"
    },
    "739": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP2",
      "path": "0"
    },
    "740": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "741": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "743": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "744": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP3",
      "path": "0"
    },
    "745": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "746": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "747": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F3"
    },
    "750": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "751": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "754": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMP",
      "path": "0"
    },
    "755": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "756": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "757": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "758": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x340"
    },
    "761": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "762": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "763": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "765": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "LT",
      "path": "0"
    },
    "766": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x315"
    },
    "769": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "770": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "773": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "774": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP4",
      "path": "0"
    },
    "775": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "776": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DIV",
      "path": "0"
    },
    "777": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "MUL",
      "path": "0"
    },
    "778": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP4",
      "path": "0"
    },
    "779": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "780": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "781": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "783": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "784": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "785": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x340"
    },
    "788": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMP",
      "path": "0"
    },
    "789": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "790": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP3",
      "path": "0"
    },
    "791": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "792": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "793": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "794": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "796": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "797": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "799": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "802": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "803": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "804": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP2",
      "path": "0"
    },
    "805": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "806": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP2",
      "path": "0"
    },
    "807": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "808": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "809": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "811": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "812": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "813": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "815": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "816": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP1",
      "path": "0"
    },
    "817": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP4",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "GT",
      "path": "0"
    },
    "819": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x323"
    },
    "822": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "823": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP3",
      "path": "0"
    },
    "824": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "825": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SUB",
      "path": "0"
    },
    "826": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "828": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "AND",
      "path": "0"
    },
    "829": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "DUP3",
      "path": "0"
    },
    "830": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "ADD",
      "path": "0"
    },
    "831": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "832": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "833": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "POP",
      "path": "0"
    },
    "834": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "POP",
      "path": "0"
    },
    "835": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "POP",
      "path": "0"
    },
    "836": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "POP",
      "path": "0"
    },
    "837": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "POP",
      "path": "0"
    },
    "838": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "839": {
      "fn": "ERC20.name",
      "offset": [
        1219,
        1231
      ],
      "op": "POP",
      "path": "0"
    },
    "840": {
      "fn": "ERC20.name",
      "offset": [
        1157,
        1238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "841": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        1157,
        1238
      ],
      "op": "JUMP",
      "path": "0"
    },
    "842": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "843": {
      "fn": "ERC20.approve",
      "offset": [
        2107,
        2144
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x355"
    },
    "846": {
      "fn": "ERC20.approve",
      "offset": [
        2116,
        2126
      ],
      "op": "CALLER",
      "path": "0"
    },
    "847": {
      "fn": "ERC20.approve",
      "offset": [
        2128,
        2135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "848": {
      "fn": "ERC20.approve",
      "offset": [
        2137,
        2143
      ],
      "op": "DUP4",
      "path": "0"
    },
    "849": {
      "fn": "ERC20.approve",
      "offset": [
        2107,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D7"
    },
    "852": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2107,
        2144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "853": {
      "fn": "ERC20.approve",
      "offset": [
        2107,
        2144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "854": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "POP",
      "path": "0"
    },
    "855": {
      "fn": "ERC20.approve",
      "offset": [
        2040,
        2151
      ],
      "op": "POP",
      "path": "0"
    },
    "856": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2040,
        2151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "857": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "858": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2441,
        2447
      ],
      "op": "DUP3",
      "path": "0"
    },
    "859": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2449,
        2455
      ],
      "op": "DUP2",
      "path": "0"
    },
    "860": {
      "offset": [
        955,
        961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "861": {
      "offset": [
        936,
        951
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37B"
    },
    "864": {
      "offset": [
        946,
        950
      ],
      "op": "DUP4",
      "path": "0"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "871": {
      "op": "SHL"
    },
    "872": {
      "op": "SUB"
    },
    "873": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "AND",
      "path": "0"
    },
    "874": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1571,
        1578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "876": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "878": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "879": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "881": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "883": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "884": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "886": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "887": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "888": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "889": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "890": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "891": {
      "offset": [
        936,
        951
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "892": {
      "offset": [
        936,
        961
      ],
      "op": "LT",
      "path": "0"
    },
    "893": {
      "fn": "ERC20.balanceOf",
      "offset": [
        936,
        961
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "894": {
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x399"
    },
    "897": {
      "offset": [
        928,
        984
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "898": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "offset": [
        928,
        984
      ],
      "op": "DUP2",
      "path": "0"
    },
    "909": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "912": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "ADD",
      "path": "0"
    },
    "913": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "916": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "917": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "920": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        928,
        984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "921": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "922": {
      "offset": [
        1011,
        1012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "924": {
      "offset": [
        1002,
        1008
      ],
      "op": "DUP2",
      "path": "0"
    },
    "925": {
      "offset": [
        1002,
        1012
      ],
      "op": "GT",
      "path": "0"
    },
    "926": {
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "929": {
      "offset": [
        994,
        1032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "930": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "932": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "939": {
      "op": "SHL"
    },
    "940": {
      "offset": [
        994,
        1032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "941": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "942": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "944": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "ADD",
      "path": "0"
    },
    "945": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "948": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "949": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB05"
    },
    "952": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        994,
        1032
      ],
      "op": "JUMP",
      "path": "0"
    },
    "953": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "960": {
      "op": "SHL"
    },
    "961": {
      "op": "SUB"
    },
    "962": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 7
    },
    "963": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "AND",
      "path": "0"
    },
    "964": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "966": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "967": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "968": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "969": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "971": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "973": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "974": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "975": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "976": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "978": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "DUP1",
      "path": "0"
    },
    "979": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "DUP4",
      "path": "0"
    },
    "980": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2551
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "981": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2552,
        2562
      ],
      "op": "CALLER",
      "path": "0"
    },
    "982": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2563
      ],
      "op": "DUP5",
      "path": "0"
    },
    "983": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2563
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "984": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "985": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2563
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "986": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2563
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "987": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "988": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2563
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "989": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2563
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "990": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2573
      ],
      "op": "DUP4",
      "path": "0"
    },
    "991": {
      "op": "GT"
    },
    "992": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        2532,
        2573
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "993": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "996": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "997": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "999": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1006": {
      "op": "SHL"
    },
    "1007": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1008": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1011": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1013": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1014": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "ADD",
      "path": "0"
    },
    "1015": {
      "op": "MSTORE"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1020": {
      "op": "DUP3"
    },
    "1021": {
      "op": "ADD"
    },
    "1022": {
      "op": "MSTORE"
    },
    "1023": {
      "op": "PUSH13",
      "value": "0x6E6F20616C6C6F77616E636521"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1039": {
      "op": "SHL"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1042": {
      "op": "DUP3"
    },
    "1043": {
      "op": "ADD"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1051": {
      "op": "JUMP"
    },
    "1052": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2524,
        2591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1059": {
      "op": "SHL"
    },
    "1060": {
      "op": "SUB"
    },
    "1061": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 8
    },
    "1062": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "AND",
      "path": "0"
    },
    "1063": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1065": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1067": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1068": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1070": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1073": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1074": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1075": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1077": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1078": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1079": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1080": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2621,
        2631
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1081": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2632
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1082": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1083": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1084": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2632
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1085": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1086": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1087": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2632
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1088": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1089": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1090": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2636,
        2642
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1091": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2636,
        2642
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1092": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2620
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1093": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44F"
    },
    "1096": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1097": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2636,
        2642
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1098": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2636,
        2642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "1102": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2601,
        2642
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1103": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1104": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1105": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1106": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2601,
        2642
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1107": {
      "op": "POP"
    },
    "1108": {
      "op": "POP"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 9
    },
    "1118": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "AND",
      "path": "0"
    },
    "1119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1121": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1123": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1124": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1126": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1128": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1131": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1132": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1135": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2674,
        2680
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1136": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2674,
        2680
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1137": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2670
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1138": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47C"
    },
    "1141": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1142": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2674,
        2680
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1143": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2674,
        2680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1144": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "1147": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2653,
        2680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1148": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2653,
        2680
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1152": {
      "op": "POP"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1160": {
      "op": "SHL"
    },
    "1161": {
      "op": "SUB"
    },
    "1162": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 10
    },
    "1163": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "AND",
      "path": "0"
    },
    "1164": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1166": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1167": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1168": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1169": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1171": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1173": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1174": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1176": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1177": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1178": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1179": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2714,
        2720
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2714,
        2720
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1182": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A9"
    },
    "1186": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1187": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2714,
        2720
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1188": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2714,
        2720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1189": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94E"
    },
    "1192": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2690,
        2720
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1193": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1194": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1195": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "POP",
      "path": "0"
    },
    "1196": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "POP",
      "path": "0"
    },
    "1197": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1198": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1199": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1200": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2690,
        2720
      ],
      "op": "POP",
      "path": "0"
    },
    "1201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2752,
        2761
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 11
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1208": {
      "op": "SHL"
    },
    "1209": {
      "op": "SUB"
    },
    "1210": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "AND",
      "path": "0"
    },
    "1211": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2744,
        2750
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "AND",
      "path": "0"
    },
    "1221": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1254": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2763,
        2769
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1255": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F5"
    },
    "1261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1262": {
      "op": "DUP2"
    },
    "1263": {
      "op": "MSTORE"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "op": "SWAP1"
    },
    "1268": {
      "op": "JUMP"
    },
    "1269": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1270": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1273": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1274": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "SUB",
      "path": "0"
    },
    "1276": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2735,
        2770
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1278": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "POP",
      "path": "0"
    },
    "1279": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "POP",
      "path": "0"
    },
    "1280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "POP",
      "path": "0"
    },
    "1281": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "POP",
      "path": "0"
    },
    "1282": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2348,
        2777
      ],
      "op": "POP",
      "path": "0"
    },
    "1283": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        2348,
        2777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1284": {
      "fn": "ERC20.symbol",
      "offset": [
        1244,
        1329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "fn": "ERC20.symbol",
      "offset": [
        1283,
        1296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1287": {
      "fn": "ERC20.symbol",
      "offset": [
        1315,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x2"
    },
    "1289": {
      "fn": "ERC20.symbol",
      "offset": [
        1308,
        1322
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1290": {
      "fn": "ERC20.symbol",
      "offset": [
        1308,
        1322
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1291": {
      "fn": "ERC20.symbol",
      "offset": [
        1308,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C7"
    },
    "1294": {
      "fn": "ERC20.symbol",
      "offset": [
        1308,
        1322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1295": {
      "fn": "ERC20.symbol",
      "offset": [
        1308,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9F"
    },
    "1298": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        1308,
        1322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1299": {
      "fn": "ERC20.burn",
      "offset": [
        3042,
        3323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1300": {
      "offset": [
        1109,
        1115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1302": {
      "fn": "ERC20.burn",
      "offset": [
        1109,
        1115
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "offset": [
        1109,
        1115
      ],
      "op": "AND",
      "path": "0"
    },
    "1312": {
      "offset": [
        1095,
        1105
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1313": {
      "offset": [
        1095,
        1115
      ],
      "op": "EQ",
      "path": "0"
    },
    "1314": {
      "offset": [
        1087,
        1133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55D"
    },
    "1317": {
      "offset": [
        1087,
        1133
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1318": {
      "fn": "ERC20.burn",
      "offset": [
        1087,
        1133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC20.burn",
      "offset": [
        1087,
        1133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "offset": [
        1087,
        1133
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1329": {
      "fn": "ERC20.burn",
      "offset": [
        1087,
        1133
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1332": {
      "offset": [
        1087,
        1133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1334": {
      "fn": "ERC20.burn",
      "offset": [
        1087,
        1133
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1335": {
      "fn": "ERC20.burn",
      "offset": [
        1087,
        1133
      ],
      "op": "ADD",
      "path": "0"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH13",
      "value": "0x6E6F7420616E206F776E657221"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1363": {
      "op": "DUP3"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "op": "MSTORE"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "offset": [
        1087,
        1133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1372": {
      "op": "JUMP"
    },
    "1373": {
      "offset": [
        1087,
        1133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1374": {
      "fn": "ERC20.burn",
      "offset": [
        3116,
        3120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1375": {
      "fn": "ERC20.burn",
      "offset": [
        3122,
        3128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1376": {
      "offset": [
        955,
        961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1377": {
      "offset": [
        936,
        951
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57F"
    },
    "1380": {
      "offset": [
        946,
        950
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "AND",
      "path": "0"
    },
    "1390": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1571,
        1578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1392": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1393": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1394": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1395": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1397": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1399": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1400": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1402": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1403": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1404": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1405": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1406": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1514,
        1622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1407": {
      "offset": [
        936,
        951
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1408": {
      "offset": [
        936,
        961
      ],
      "op": "LT",
      "path": "0"
    },
    "1409": {
      "fn": "ERC20.balanceOf",
      "offset": [
        936,
        961
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1410": {
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59D"
    },
    "1413": {
      "offset": [
        928,
        984
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1414": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1416": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1423": {
      "op": "SHL"
    },
    "1424": {
      "offset": [
        928,
        984
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1425": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1426": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1428": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "ADD",
      "path": "0"
    },
    "1429": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1432": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1433": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "1436": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        928,
        984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1437": {
      "fn": "ERC20.balanceOf",
      "offset": [
        928,
        984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1438": {
      "offset": [
        1011,
        1012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1440": {
      "offset": [
        1002,
        1008
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1441": {
      "offset": [
        1002,
        1012
      ],
      "op": "GT",
      "path": "0"
    },
    "1442": {
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BD"
    },
    "1445": {
      "offset": [
        994,
        1032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1446": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1448": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "offset": [
        994,
        1032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1457": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1458": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1460": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "ADD",
      "path": "0"
    },
    "1461": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1464": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1465": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB05"
    },
    "1468": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        994,
        1032
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1469": {
      "fn": "ERC20.balanceOf",
      "offset": [
        994,
        1032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1470": {
      "fn": "ERC20.burn",
      "offset": [
        3172,
        3173
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "1472": {
      "fn": "ERC20.burn",
      "offset": [
        3163,
        3169
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1473": {
      "fn": "ERC20.burn",
      "offset": [
        3148,
        3160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1475": {
      "fn": "ERC20.burn",
      "offset": [
        3148,
        3160
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1476": {
      "fn": "ERC20.burn",
      "offset": [
        3148,
        3169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CD"
    },
    "1479": {
      "fn": "ERC20.burn",
      "offset": [
        3148,
        3169
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1480": {
      "fn": "ERC20.burn",
      "offset": [
        3148,
        3169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1481": {
      "fn": "ERC20.burn",
      "offset": [
        3148,
        3169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "1484": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3148,
        3169
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1485": {
      "fn": "ERC20.burn",
      "offset": [
        3148,
        3169
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1486": {
      "branch": 29,
      "fn": "ERC20.burn",
      "offset": [
        3148,
        3173
      ],
      "op": "GT",
      "path": "0"
    },
    "1487": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60C"
    },
    "1490": {
      "branch": 29,
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1491": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1493": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1502": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1505": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1507": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1508": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "ADD",
      "path": "0"
    },
    "1509": {
      "op": "MSTORE"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1514": {
      "op": "DUP3"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "op": "MSTORE"
    },
    "1517": {
      "op": "PUSH15",
      "value": "0x63616E6E6F74206265207A65726F21"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1538": {
      "op": "DUP3"
    },
    "1539": {
      "op": "ADD"
    },
    "1540": {
      "op": "MSTORE"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1547": {
      "op": "JUMP"
    },
    "1548": {
      "fn": "ERC20.burn",
      "offset": [
        3140,
        3193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 14
    },
    "1558": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "AND",
      "path": "0"
    },
    "1559": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1561": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1562": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1563": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1564": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1566": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1568": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1569": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1571": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1572": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1573": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1574": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1575": {
      "fn": "ERC20.burn",
      "offset": [
        3278,
        3284
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1576": {
      "fn": "ERC20.burn",
      "offset": [
        3278,
        3284
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1577": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1578": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x634"
    },
    "1581": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1582": {
      "fn": "ERC20.burn",
      "offset": [
        3278,
        3284
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1583": {
      "fn": "ERC20.burn",
      "offset": [
        3278,
        3284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1584": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "1587": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3259,
        3284
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1588": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1589": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1590": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "POP",
      "path": "0"
    },
    "1591": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "POP",
      "path": "0"
    },
    "1592": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1593": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1594": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1595": {
      "fn": "ERC20.burn",
      "offset": [
        3259,
        3284
      ],
      "op": "POP",
      "path": "0"
    },
    "1596": {
      "fn": "ERC20.burn",
      "offset": [
        3310,
        3316
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1597": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1599": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1601": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1602": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1603": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1604": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64D"
    },
    "1607": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1608": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1609": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "1612": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        3294,
        3316
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1613": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1614": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1615": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1616": {
      "fn": "ERC20.burn",
      "offset": [
        3294,
        3316
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "POP"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "fn": "ERC20.burn",
      "jump": "o",
      "offset": [
        3042,
        3323
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1624": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1625": {
      "offset": [
        1109,
        1115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1627": {
      "fn": "ERC20.mint",
      "offset": [
        1109,
        1115
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "offset": [
        1109,
        1115
      ],
      "op": "AND",
      "path": "0"
    },
    "1637": {
      "offset": [
        1095,
        1105
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1638": {
      "offset": [
        1095,
        1115
      ],
      "op": "EQ",
      "path": "0"
    },
    "1639": {
      "offset": [
        1087,
        1133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A2"
    },
    "1642": {
      "offset": [
        1087,
        1133
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1643": {
      "fn": "ERC20.mint",
      "offset": [
        1087,
        1133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1645": {
      "fn": "ERC20.mint",
      "offset": [
        1087,
        1133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "offset": [
        1087,
        1133
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1654": {
      "fn": "ERC20.mint",
      "offset": [
        1087,
        1133
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1657": {
      "offset": [
        1087,
        1133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1659": {
      "fn": "ERC20.mint",
      "offset": [
        1087,
        1133
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1660": {
      "fn": "ERC20.mint",
      "offset": [
        1087,
        1133
      ],
      "op": "ADD",
      "path": "0"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH13",
      "value": "0x6E6F7420616E206F776E657221"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1685": {
      "op": "SHL"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1688": {
      "op": "DUP3"
    },
    "1689": {
      "op": "ADD"
    },
    "1690": {
      "op": "MSTORE"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1693": {
      "op": "ADD"
    },
    "1694": {
      "offset": [
        1087,
        1133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1697": {
      "op": "JUMP"
    },
    "1698": {
      "offset": [
        1087,
        1133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1699": {
      "fn": "ERC20.mint",
      "offset": [
        2923,
        2927
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 16
    },
    "1700": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1702": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1703": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1704": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1705": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1707": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1709": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1710": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1712": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1713": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1714": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1715": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1716": {
      "fn": "ERC20.mint",
      "offset": [
        2933,
        2939
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1717": {
      "fn": "ERC20.mint",
      "offset": [
        2933,
        2939
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1718": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1719": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C1"
    },
    "1722": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1723": {
      "fn": "ERC20.mint",
      "offset": [
        2933,
        2939
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1724": {
      "fn": "ERC20.mint",
      "offset": [
        2933,
        2939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1725": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94E"
    },
    "1728": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2905,
        2939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1729": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1730": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1731": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "POP",
      "path": "0"
    },
    "1732": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "POP",
      "path": "0"
    },
    "1733": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1734": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1736": {
      "fn": "ERC20.mint",
      "offset": [
        2905,
        2939
      ],
      "op": "POP",
      "path": "0"
    },
    "1737": {
      "fn": "ERC20.mint",
      "offset": [
        2965,
        2971
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 17
    },
    "1738": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1740": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1742": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1743": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1744": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1745": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "1748": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1749": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1750": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94E"
    },
    "1753": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        2949,
        2971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1754": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1755": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1756": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1757": {
      "fn": "ERC20.mint",
      "offset": [
        2949,
        2971
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x40"
    },
    "1762": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1763": {
      "op": "DUP2"
    },
    "1764": {
      "op": "DUP2"
    },
    "1765": {
      "op": "MSTORE"
    },
    "1766": {
      "fn": "ERC20.mint",
      "offset": [
        3015,
        3019
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1767": {
      "fn": "ERC20.mint",
      "offset": [
        3015,
        3019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1768": {
      "fn": "ERC20.mint",
      "offset": [
        3003,
        3004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1770": {
      "fn": "ERC20.mint",
      "offset": [
        3003,
        3004
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1771": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1804": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1810": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1811": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1812": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1813": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "SUB",
      "path": "0"
    },
    "1814": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1815": {
      "fn": "ERC20.mint",
      "offset": [
        2986,
        3029
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1816": {
      "fn": "ERC20.mint",
      "offset": [
        2783,
        3036
      ],
      "op": "POP",
      "path": "0"
    },
    "1817": {
      "fn": "ERC20.mint",
      "jump": "o",
      "offset": [
        2783,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1818": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1819": {
      "fn": "ERC20.transfer",
      "offset": [
        1694,
        1704
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1820": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1571,
        1578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1822": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1823": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1824": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1825": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1827": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1829": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1830": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1832": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1833": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1834": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1835": {
      "fn": "ERC20.transfer",
      "offset": [
        1706,
        1712
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1836": {
      "fn": "ERC20.transfer",
      "offset": [
        1706,
        1712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1837": {
      "fn": "ERC20.transfer",
      "offset": [
        1706,
        1712
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1838": {
      "op": "GT"
    },
    "1839": {
      "offset": [
        936,
        961
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1840": {
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74B"
    },
    "1843": {
      "offset": [
        928,
        984
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1844": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1846": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1853": {
      "op": "SHL"
    },
    "1854": {
      "offset": [
        928,
        984
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1855": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1856": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1858": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "ADD",
      "path": "0"
    },
    "1859": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1862": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1863": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "1866": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        928,
        984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1867": {
      "fn": "ERC20.transfer",
      "offset": [
        928,
        984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1868": {
      "offset": [
        1011,
        1012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1870": {
      "offset": [
        1002,
        1008
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1871": {
      "offset": [
        1002,
        1012
      ],
      "op": "GT",
      "path": "0"
    },
    "1872": {
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1875": {
      "offset": [
        994,
        1032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1876": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1878": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "offset": [
        994,
        1032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1887": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1888": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1890": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "ADD",
      "path": "0"
    },
    "1891": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "1894": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1895": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB05"
    },
    "1898": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        994,
        1032
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1899": {
      "fn": "ERC20.transfer",
      "offset": [
        994,
        1032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1900": {
      "fn": "ERC20.transfer",
      "offset": [
        1788,
        1798
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 19
    },
    "1901": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1903": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1904": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1905": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1906": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1908": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1910": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1911": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1913": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1914": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1915": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1916": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1917": {
      "fn": "ERC20.transfer",
      "offset": [
        1803,
        1809
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1918": {
      "fn": "ERC20.transfer",
      "offset": [
        1803,
        1809
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1919": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1920": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78A"
    },
    "1923": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1924": {
      "fn": "ERC20.transfer",
      "offset": [
        1803,
        1809
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1925": {
      "fn": "ERC20.transfer",
      "offset": [
        1803,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1926": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "1929": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1778,
        1809
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1930": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1931": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1932": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1933": {
      "fn": "ERC20.transfer",
      "offset": [
        1778,
        1809
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1934": {
      "op": "POP"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 20
    },
    "1945": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "AND",
      "path": "0"
    },
    "1946": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1948": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1949": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1950": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1951": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1953": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1955": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1956": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1958": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1959": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1960": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1961": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1962": {
      "fn": "ERC20.transfer",
      "offset": [
        1836,
        1842
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1963": {
      "fn": "ERC20.transfer",
      "offset": [
        1836,
        1842
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1964": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1965": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B7"
    },
    "1968": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1969": {
      "fn": "ERC20.transfer",
      "offset": [
        1836,
        1842
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1970": {
      "fn": "ERC20.transfer",
      "offset": [
        1836,
        1842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1971": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94E"
    },
    "1974": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        1819,
        1842
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1975": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1976": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1977": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1978": {
      "fn": "ERC20.transfer",
      "offset": [
        1819,
        1842
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1979": {
      "op": "POP"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x40"
    },
    "1983": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1984": {
      "op": "DUP4"
    },
    "1985": {
      "op": "DUP2"
    },
    "1986": {
      "op": "MSTORE"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "op": "SUB"
    },
    "1995": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1996": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "AND",
      "path": "0"
    },
    "1997": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1998": {
      "fn": "ERC20.transfer",
      "offset": [
        1866,
        1876
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1999": {
      "fn": "ERC20.transfer",
      "offset": [
        1866,
        1876
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2000": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2033": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2039": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2040": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2041": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2042": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "SUB",
      "path": "0"
    },
    "2043": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2044": {
      "fn": "ERC20.transfer",
      "offset": [
        1857,
        1889
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2045": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "POP",
      "path": "0"
    },
    "2046": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "POP",
      "path": "0"
    },
    "2047": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "POP",
      "path": "0"
    },
    "2048": {
      "fn": "ERC20.transfer",
      "offset": [
        1628,
        1896
      ],
      "op": "POP",
      "path": "0"
    },
    "2049": {
      "fn": "ERC20.transfer",
      "jump": "o",
      "offset": [
        1628,
        1896
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2050": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2057": {
      "op": "SHL"
    },
    "2058": {
      "op": "SUB"
    },
    "2059": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 22
    },
    "2060": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2061": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "AND",
      "path": "0"
    },
    "2062": {
      "fn": "ERC20.allowance",
      "offset": [
        1974,
        1981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2064": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2065": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2066": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2067": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2069": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2071": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2072": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2073": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2074": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2076": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2077": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2078": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2018
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2079": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2080": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2081": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "AND",
      "path": "0"
    },
    "2082": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2083": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2084": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2085": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2086": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2087": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2088": {
      "fn": "ERC20.allowance",
      "offset": [
        2000,
        2027
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2089": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2090": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2091": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2092": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "POP",
      "path": "0"
    },
    "2093": {
      "fn": "ERC20.allowance",
      "offset": [
        1902,
        2034
      ],
      "op": "POP",
      "path": "0"
    },
    "2094": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1902,
        2034
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2095": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2096": {
      "fn": "ERC20.sell",
      "offset": [
        746,
        756
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2097": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1571,
        1578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2099": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2100": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2101": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2102": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2104": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2106": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2107": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2109": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2110": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2111": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1597,
        1615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2112": {
      "fn": "ERC20.sell",
      "offset": [
        758,
        764
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2113": {
      "fn": "ERC20.sell",
      "offset": [
        758,
        764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2114": {
      "fn": "ERC20.sell",
      "offset": [
        758,
        764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2115": {
      "op": "GT"
    },
    "2116": {
      "offset": [
        936,
        961
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2117": {
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x860"
    },
    "2120": {
      "offset": [
        928,
        984
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2121": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2123": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2124": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "offset": [
        928,
        984
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2132": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2133": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2135": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "ADD",
      "path": "0"
    },
    "2136": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "2139": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2140": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "2143": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        928,
        984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2144": {
      "fn": "ERC20.sell",
      "offset": [
        928,
        984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2145": {
      "offset": [
        1011,
        1012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2147": {
      "offset": [
        1002,
        1008
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2148": {
      "offset": [
        1002,
        1012
      ],
      "op": "GT",
      "path": "0"
    },
    "2149": {
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x880"
    },
    "2152": {
      "offset": [
        994,
        1032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2153": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2155": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "offset": [
        994,
        1032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2164": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2165": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2167": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "ADD",
      "path": "0"
    },
    "2168": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "2171": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2172": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB05"
    },
    "2175": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        994,
        1032
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2176": {
      "fn": "ERC20.sell",
      "offset": [
        994,
        1032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2177": {
      "fn": "ERC20.sell",
      "offset": [
        786,
        796
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 23
    },
    "2178": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2180": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2181": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2182": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2183": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2185": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2187": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2188": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2190": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2191": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2192": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2193": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2194": {
      "fn": "ERC20.sell",
      "offset": [
        801,
        807
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2195": {
      "fn": "ERC20.sell",
      "offset": [
        801,
        807
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2196": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2197": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89F"
    },
    "2200": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2201": {
      "fn": "ERC20.sell",
      "offset": [
        801,
        807
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2202": {
      "fn": "ERC20.sell",
      "offset": [
        801,
        807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2203": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2E"
    },
    "2206": {
      "fn": "ERC20.sell",
      "jump": "i",
      "offset": [
        776,
        807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2207": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2208": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2209": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2210": {
      "fn": "ERC20.sell",
      "offset": [
        776,
        807
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2211": {
      "op": "POP"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x40"
    },
    "2215": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2216": {
      "fn": "ERC20.sell",
      "offset": [
        825,
        835
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2217": {
      "fn": "ERC20.sell",
      "offset": [
        825,
        835
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2218": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2219": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2220": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "2223": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "MUL",
      "path": "0"
    },
    "2224": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2225": {
      "fn": "ERC20.sell",
      "offset": [
        846,
        852
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2226": {
      "fn": "ERC20.sell",
      "offset": [
        846,
        852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2227": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2229": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2230": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2231": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2232": {
      "fn": "ERC20.sell",
      "offset": [
        846,
        852
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2233": {
      "fn": "ERC20.sell",
      "offset": [
        825,
        835
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2234": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2235": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "CALL",
      "path": "0"
    },
    "2236": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2237": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "POP",
      "path": "0"
    },
    "2238": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "POP",
      "path": "0"
    },
    "2239": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "POP",
      "path": "0"
    },
    "2240": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "POP",
      "path": "0"
    },
    "2241": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2242": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2243": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2244": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D1"
    },
    "2247": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2248": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2249": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2251": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2252": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2253": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2254": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2256": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2257": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2258": {
      "fn": "ERC20.sell",
      "offset": [
        817,
        853
      ],
      "op": "POP",
      "path": "0"
    },
    "2259": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "POP",
      "path": "0"
    },
    "2260": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "POP",
      "path": "0"
    },
    "2261": {
      "fn": "ERC20.sell",
      "offset": [
        694,
        860
      ],
      "op": "POP",
      "path": "0"
    },
    "2262": {
      "fn": "ERC20.sell",
      "jump": "o",
      "offset": [
        694,
        860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2263": {
      "fn": "ERC20._approve",
      "offset": [
        2157,
        2342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2270": {
      "op": "SHL"
    },
    "2271": {
      "op": "SUB"
    },
    "2272": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 25
    },
    "2273": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2274": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "AND",
      "path": "0"
    },
    "2275": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2277": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2278": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2279": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2280": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2282": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2284": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2285": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2286": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2287": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2289": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2290": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2291": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2270
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2292": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2293": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2294": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "AND",
      "path": "0"
    },
    "2295": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2296": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2297": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2298": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2299": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2300": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2301": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2302": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2303": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2304": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2279
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2305": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2288
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2306": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2307": {
      "fn": "ERC20._approve",
      "offset": [
        2251,
        2288
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2308": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 26
    },
    "2309": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2310": {
      "op": "DUP5"
    },
    "2311": {
      "op": "DUP2"
    },
    "2312": {
      "op": "MSTORE"
    },
    "2313": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x6E11FB1B7F119E3F2FA29896EF5FDF8B8A2D0D4DF6FE90BA8668E7D8B2FFA25E"
    },
    "2346": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2350": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2351": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2352": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2353": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "SUB",
      "path": "0"
    },
    "2354": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2355": {
      "fn": "ERC20._approve",
      "offset": [
        2303,
        2335
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2356": {
      "fn": "ERC20._approve",
      "offset": [
        2157,
        2342
      ],
      "op": "POP",
      "path": "0"
    },
    "2357": {
      "fn": "ERC20._approve",
      "offset": [
        2157,
        2342
      ],
      "op": "POP",
      "path": "0"
    },
    "2358": {
      "fn": "ERC20._approve",
      "offset": [
        2157,
        2342
      ],
      "op": "POP",
      "path": "0"
    },
    "2359": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        2157,
        2342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2360": {
      "op": "JUMPDEST"
    },
    "2361": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2368": {
      "op": "SHL"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2371": {
      "op": "MSTORE"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2376": {
      "op": "MSTORE"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2381": {
      "op": "REVERT"
    },
    "2382": {
      "op": "JUMPDEST"
    },
    "2383": {
      "op": "DUP1"
    },
    "2384": {
      "op": "DUP3"
    },
    "2385": {
      "op": "ADD"
    },
    "2386": {
      "op": "DUP1"
    },
    "2387": {
      "op": "DUP3"
    },
    "2388": {
      "op": "GT"
    },
    "2389": {
      "op": "ISZERO"
    },
    "2390": {
      "op": "PUSH2",
      "value": "0x829"
    },
    "2393": {
      "op": "JUMPI"
    },
    "2394": {
      "op": "PUSH2",
      "value": "0x829"
    },
    "2397": {
      "op": "PUSH2",
      "value": "0x938"
    },
    "2400": {
      "jump": "i",
      "op": "JUMP"
    },
    "2401": {
      "op": "JUMPDEST"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2406": {
      "op": "DUP1"
    },
    "2407": {
      "op": "DUP4"
    },
    "2408": {
      "op": "MSTORE"
    },
    "2409": {
      "op": "DUP4"
    },
    "2410": {
      "op": "MLOAD"
    },
    "2411": {
      "op": "DUP1"
    },
    "2412": {
      "op": "DUP3"
    },
    "2413": {
      "op": "DUP6"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "op": "MSTORE"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2418": {
      "op": "JUMPDEST"
    },
    "2419": {
      "op": "DUP2"
    },
    "2420": {
      "op": "DUP2"
    },
    "2421": {
      "op": "LT"
    },
    "2422": {
      "op": "ISZERO"
    },
    "2423": {
      "op": "PUSH2",
      "value": "0x98E"
    },
    "2426": {
      "op": "JUMPI"
    },
    "2427": {
      "op": "DUP6"
    },
    "2428": {
      "op": "DUP2"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "op": "DUP4"
    },
    "2431": {
      "op": "ADD"
    },
    "2432": {
      "op": "MLOAD"
    },
    "2433": {
      "op": "DUP6"
    },
    "2434": {
      "op": "DUP3"
    },
    "2435": {
      "op": "ADD"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2438": {
      "op": "ADD"
    },
    "2439": {
      "op": "MSTORE"
    },
    "2440": {
      "op": "DUP3"
    },
    "2441": {
      "op": "ADD"
    },
    "2442": {
      "op": "PUSH2",
      "value": "0x972"
    },
    "2445": {
      "op": "JUMP"
    },
    "2446": {
      "op": "JUMPDEST"
    },
    "2447": {
      "op": "POP"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2452": {
      "op": "DUP3"
    },
    "2453": {
      "op": "DUP7"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "op": "ADD"
    },
    "2456": {
      "op": "MSTORE"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2461": {
      "op": "NOT"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2464": {
      "op": "DUP4"
    },
    "2465": {
      "op": "ADD"
    },
    "2466": {
      "op": "AND"
    },
    "2467": {
      "op": "DUP6"
    },
    "2468": {
      "op": "ADD"
    },
    "2469": {
      "op": "ADD"
    },
    "2470": {
      "op": "SWAP3"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "op": "SWAP3"
    },
    "2475": {
      "op": "SWAP2"
    },
    "2476": {
      "op": "POP"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "jump": "o",
      "op": "JUMP"
    },
    "2479": {
      "op": "JUMPDEST"
    },
    "2480": {
      "op": "DUP1"
    },
    "2481": {
      "op": "CALLDATALOAD"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2488": {
      "op": "SHL"
    },
    "2489": {
      "op": "SUB"
    },
    "2490": {
      "op": "DUP2"
    },
    "2491": {
      "op": "AND"
    },
    "2492": {
      "op": "DUP2"
    },
    "2493": {
      "op": "EQ"
    },
    "2494": {
      "op": "PUSH2",
      "value": "0x9C6"
    },
    "2497": {
      "op": "JUMPI"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2500": {
      "op": "DUP1"
    },
    "2501": {
      "op": "REVERT"
    },
    "2502": {
      "op": "JUMPDEST"
    },
    "2503": {
      "op": "SWAP2"
    },
    "2504": {
      "op": "SWAP1"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "jump": "o",
      "op": "JUMP"
    },
    "2507": {
      "op": "JUMPDEST"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2510": {
      "op": "DUP1"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2513": {
      "op": "DUP4"
    },
    "2514": {
      "op": "DUP6"
    },
    "2515": {
      "op": "SUB"
    },
    "2516": {
      "op": "SLT"
    },
    "2517": {
      "op": "ISZERO"
    },
    "2518": {
      "op": "PUSH2",
      "value": "0x9DE"
    },
    "2521": {
      "op": "JUMPI"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2524": {
      "op": "DUP1"
    },
    "2525": {
      "op": "REVERT"
    },
    "2526": {
      "op": "JUMPDEST"
    },
    "2527": {
      "op": "PUSH2",
      "value": "0x9E7"
    },
    "2530": {
      "op": "DUP4"
    },
    "2531": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2534": {
      "jump": "i",
      "op": "JUMP"
    },
    "2535": {
      "op": "JUMPDEST"
    },
    "2536": {
      "op": "SWAP5"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2539": {
      "op": "SWAP4"
    },
    "2540": {
      "op": "SWAP1"
    },
    "2541": {
      "op": "SWAP4"
    },
    "2542": {
      "op": "ADD"
    },
    "2543": {
      "op": "CALLDATALOAD"
    },
    "2544": {
      "op": "SWAP4"
    },
    "2545": {
      "op": "POP"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "op": "POP"
    },
    "2548": {
      "jump": "o",
      "op": "JUMP"
    },
    "2549": {
      "op": "JUMPDEST"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2552": {
      "op": "DUP1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2557": {
      "op": "DUP5"
    },
    "2558": {
      "op": "DUP7"
    },
    "2559": {
      "op": "SUB"
    },
    "2560": {
      "op": "SLT"
    },
    "2561": {
      "op": "ISZERO"
    },
    "2562": {
      "op": "PUSH2",
      "value": "0xA0A"
    },
    "2565": {
      "op": "JUMPI"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2568": {
      "op": "DUP1"
    },
    "2569": {
      "op": "REVERT"
    },
    "2570": {
      "op": "JUMPDEST"
    },
    "2571": {
      "op": "PUSH2",
      "value": "0xA13"
    },
    "2574": {
      "op": "DUP5"
    },
    "2575": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2578": {
      "jump": "i",
      "op": "JUMP"
    },
    "2579": {
      "op": "JUMPDEST"
    },
    "2580": {
      "op": "SWAP3"
    },
    "2581": {
      "op": "POP"
    },
    "2582": {
      "op": "PUSH2",
      "value": "0xA21"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2587": {
      "op": "DUP6"
    },
    "2588": {
      "op": "ADD"
    },
    "2589": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2592": {
      "jump": "i",
      "op": "JUMP"
    },
    "2593": {
      "op": "JUMPDEST"
    },
    "2594": {
      "op": "SWAP2"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2598": {
      "op": "DUP5"
    },
    "2599": {
      "op": "ADD"
    },
    "2600": {
      "op": "CALLDATALOAD"
    },
    "2601": {
      "op": "SWAP1"
    },
    "2602": {
      "op": "POP"
    },
    "2603": {
      "op": "SWAP3"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "op": "SWAP3"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "SWAP3"
    },
    "2608": {
      "jump": "o",
      "op": "JUMP"
    },
    "2609": {
      "op": "JUMPDEST"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "DUP5"
    },
    "2616": {
      "op": "SUB"
    },
    "2617": {
      "op": "SLT"
    },
    "2618": {
      "op": "ISZERO"
    },
    "2619": {
      "op": "PUSH2",
      "value": "0xA43"
    },
    "2622": {
      "op": "JUMPI"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2625": {
      "op": "DUP1"
    },
    "2626": {
      "op": "REVERT"
    },
    "2627": {
      "op": "JUMPDEST"
    },
    "2628": {
      "op": "PUSH2",
      "value": "0xA4C"
    },
    "2631": {
      "op": "DUP3"
    },
    "2632": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2635": {
      "jump": "i",
      "op": "JUMP"
    },
    "2636": {
      "op": "JUMPDEST"
    },
    "2637": {
      "op": "SWAP4"
    },
    "2638": {
      "op": "SWAP3"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "op": "POP"
    },
    "2642": {
      "jump": "o",
      "op": "JUMP"
    },
    "2643": {
      "op": "JUMPDEST"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2648": {
      "op": "DUP3"
    },
    "2649": {
      "op": "DUP5"
    },
    "2650": {
      "op": "SUB"
    },
    "2651": {
      "op": "SLT"
    },
    "2652": {
      "op": "ISZERO"
    },
    "2653": {
      "op": "PUSH2",
      "value": "0xA65"
    },
    "2656": {
      "op": "JUMPI"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2659": {
      "op": "DUP1"
    },
    "2660": {
      "op": "REVERT"
    },
    "2661": {
      "op": "JUMPDEST"
    },
    "2662": {
      "op": "POP"
    },
    "2663": {
      "op": "CALLDATALOAD"
    },
    "2664": {
      "op": "SWAP2"
    },
    "2665": {
      "op": "SWAP1"
    },
    "2666": {
      "op": "POP"
    },
    "2667": {
      "jump": "o",
      "op": "JUMP"
    },
    "2668": {
      "op": "JUMPDEST"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2671": {
      "op": "DUP1"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2674": {
      "op": "DUP4"
    },
    "2675": {
      "op": "DUP6"
    },
    "2676": {
      "op": "SUB"
    },
    "2677": {
      "op": "SLT"
    },
    "2678": {
      "op": "ISZERO"
    },
    "2679": {
      "op": "PUSH2",
      "value": "0xA7F"
    },
    "2682": {
      "op": "JUMPI"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2685": {
      "op": "DUP1"
    },
    "2686": {
      "op": "REVERT"
    },
    "2687": {
      "op": "JUMPDEST"
    },
    "2688": {
      "op": "PUSH2",
      "value": "0xA88"
    },
    "2691": {
      "op": "DUP4"
    },
    "2692": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2695": {
      "jump": "i",
      "op": "JUMP"
    },
    "2696": {
      "op": "JUMPDEST"
    },
    "2697": {
      "op": "SWAP2"
    },
    "2698": {
      "op": "POP"
    },
    "2699": {
      "op": "PUSH2",
      "value": "0xA96"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2704": {
      "op": "DUP5"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2709": {
      "jump": "i",
      "op": "JUMP"
    },
    "2710": {
      "op": "JUMPDEST"
    },
    "2711": {
      "op": "SWAP1"
    },
    "2712": {
      "op": "POP"
    },
    "2713": {
      "op": "SWAP3"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "op": "SWAP3"
    },
    "2716": {
      "op": "SWAP1"
    },
    "2717": {
      "op": "POP"
    },
    "2718": {
      "jump": "o",
      "op": "JUMP"
    },
    "2719": {
      "op": "JUMPDEST"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2722": {
      "op": "DUP2"
    },
    "2723": {
      "op": "DUP2"
    },
    "2724": {
      "op": "SHR"
    },
    "2725": {
      "op": "SWAP1"
    },
    "2726": {
      "op": "DUP3"
    },
    "2727": {
      "op": "AND"
    },
    "2728": {
      "op": "DUP1"
    },
    "2729": {
      "op": "PUSH2",
      "value": "0xAB3"
    },
    "2732": {
      "op": "JUMPI"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2735": {
      "op": "DUP3"
    },
    "2736": {
      "op": "AND"
    },
    "2737": {
      "op": "SWAP2"
    },
    "2738": {
      "op": "POP"
    },
    "2739": {
      "op": "JUMPDEST"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2742": {
      "op": "DUP3"
    },
    "2743": {
      "op": "LT"
    },
    "2744": {
      "op": "DUP2"
    },
    "2745": {
      "op": "SUB"
    },
    "2746": {
      "op": "PUSH2",
      "value": "0xAD3"
    },
    "2749": {
      "op": "JUMPI"
    },
    "2750": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2757": {
      "op": "SHL"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2760": {
      "op": "MSTORE"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2765": {
      "op": "MSTORE"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2770": {
      "op": "REVERT"
    },
    "2771": {
      "op": "JUMPDEST"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "SWAP2"
    },
    "2774": {
      "op": "SWAP1"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "jump": "o",
      "op": "JUMP"
    },
    "2777": {
      "op": "JUMPDEST"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2780": {
      "op": "DUP1"
    },
    "2781": {
      "op": "DUP3"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2785": {
      "op": "SWAP1"
    },
    "2786": {
      "op": "DUP3"
    },
    "2787": {
      "op": "ADD"
    },
    "2788": {
      "op": "MSTORE"
    },
    "2789": {
      "op": "PUSH18",
      "value": "0x6E6F7420656E6F75676820746F6B656E7321"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2810": {
      "op": "SHL"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2813": {
      "op": "DUP3"
    },
    "2814": {
      "op": "ADD"
    },
    "2815": {
      "op": "MSTORE"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "op": "SWAP1"
    },
    "2820": {
      "jump": "o",
      "op": "JUMP"
    },
    "2821": {
      "op": "JUMPDEST"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2824": {
      "op": "DUP1"
    },
    "2825": {
      "op": "DUP3"
    },
    "2826": {
      "op": "MSTORE"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2829": {
      "op": "SWAP1"
    },
    "2830": {
      "op": "DUP3"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "MSTORE"
    },
    "2833": {
      "op": "PUSH15",
      "value": "0x616D6F756E74206973207A65726F21"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2851": {
      "op": "SHL"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2854": {
      "op": "DUP3"
    },
    "2855": {
      "op": "ADD"
    },
    "2856": {
      "op": "MSTORE"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2859": {
      "op": "ADD"
    },
    "2860": {
      "op": "SWAP1"
    },
    "2861": {
      "jump": "o",
      "op": "JUMP"
    },
    "2862": {
      "op": "JUMPDEST"
    },
    "2863": {
      "op": "DUP2"
    },
    "2864": {
      "op": "DUP2"
    },
    "2865": {
      "op": "SUB"
    },
    "2866": {
      "op": "DUP2"
    },
    "2867": {
      "op": "DUP2"
    },
    "2868": {
      "op": "GT"
    },
    "2869": {
      "op": "ISZERO"
    },
    "2870": {
      "op": "PUSH2",
      "value": "0x829"
    },
    "2873": {
      "op": "JUMPI"
    },
    "2874": {
      "op": "PUSH2",
      "value": "0x829"
    },
    "2877": {
      "op": "PUSH2",
      "value": "0x938"
    },
    "2880": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "38ac0ae1ec70c0a3e56c934c20cca6ca5ebd0386",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\ncontract ERC20 is IERC20 {\n    address private _owner;\n    string private _name;\n    string private _symbol;\n    uint256 private _totalSupply;\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    constructor (string memory name_, string memory symbol_, uint256 initialSupply) {\n        _name = name_;\n        _symbol = symbol_;\n        _owner = msg.sender;\n        mint(initialSupply);\n    }\n\n    receive() external payable {\n        require(msg.value > 0, \"not enough funds!\");\n        _balances[msg.sender] += msg.value;\n    }\n\n    function sell(uint256 amount) external enoughTokens(msg.sender, amount) {\n        _balances[msg.sender] -= amount;\n        payable(msg.sender).transfer(amount);\n    }\n\n    modifier enoughTokens(address from, uint256 amount) {\n        require(balanceOf(from) >= amount, \"not enough tokens!\");\n        require(amount > 0, \"amount is zero!\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == _owner, \"not an owner!\");\n        _;\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n    \n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address to, uint256 amount) public enoughTokens(msg.sender, amount) {\n        _beforeTokenTransfer(msg.sender, to, amount);\n        _balances[msg.sender] -= amount;\n        _balances[to] += amount;\n        emit Transfer(msg.sender, to, amount);\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public {\n        _approve(msg.sender, spender, amount);\n    }\n\n    function _approve(address sender, address spender, uint256 amount) internal virtual {\n        _allowances[sender][spender] = amount;\n        emit Approve(sender, spender, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public enoughTokens(sender, amount) {\n        _beforeTokenTransfer(sender, recipient, amount);\n        require(_allowances[sender][msg.sender] >= amount, \"no allowance!\");\n        _allowances[sender][msg.sender] -= amount;\n\n        _balances[sender] -= amount;\n        _balances[recipient] += amount;\n        emit Transfer(sender, recipient, amount);\n    }\n\n    function mint(uint256 amount) public onlyOwner {\n        _beforeTokenTransfer(address(0), address(this), amount);\n        _balances[address(this)] += amount;\n        _totalSupply += amount;\n        emit Transfer(address(0), address(this), amount);\n    }\n\n    function burn(address from, uint256 amount) public onlyOwner enoughTokens(from, amount) {\n        require(_totalSupply - amount > 0, \"cannot be zero!\");\n        _beforeTokenTransfer(from, address(0), amount);\n        _balances[from] -= amount;\n        _totalSupply -= amount;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n",
  "sourceMap": "81:3341:0:-:0;;;356:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;446:5;:13;454:5;446;:13;:::i;:::-;-1:-1:-1;469:7:0;:17;479:7;469;:17;:::i;:::-;-1:-1:-1;496:6:0;:19;;-1:-1:-1;;;;;;496:19:0;505:10;496:19;;;525;530:13;525:4;:19::i;:::-;356:195;;;81:3341;;2783:253;1109:6;;-1:-1:-1;;;;;1109:6:0;1095:10;:20;1087:46;;;;-1:-1:-1;;;1087:46:0;;4410:2:2;1087:46:0;;;4392:21:2;4449:2;4429:18;;;4422:30;-1:-1:-1;;;4468:18:2;;;4461:43;4521:18;;1087:46:0;;;;;;;;2923:4:::1;2905:24;::::0;;;:9:::1;:24;::::0;;;;:34;;2933:6;;2905:24;:34:::1;::::0;2933:6;;2905:34:::1;:::i;:::-;;;;;;;;2965:6;2949:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2986:43:0::1;::::0;4923:25:2;;;3015:4:0::1;::::0;3003:1:::1;::::0;2986:43:::1;::::0;4911:2:2;4896:18;2986:43:0::1;;;;;;;2783:253:::0;:::o;3329:91::-;;;;:::o;14:127:2:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:2;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:2;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:2:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:2;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:2;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:2;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:2;;;4053:26;4004:89;-1:-1:-1;;2808:1:2;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:2;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:2;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:2;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:2:o;4550:222::-;4615:9;;;4636:10;;;4633:133;;;4688:10;4683:3;4679:20;4676:1;4669:31;4723:4;4720:1;4713:15;4751:4;4748:1;4741:15;4633:133;4550:222;;;;:::o;4777:177::-;81:3341:0;;;;;;",
  "sourcePath": "contracts/ERC20.sol",
  "type": "contract"
}